type Query {
  server_specs_oas: JSON
  server_specs_graphql(scope: graphql_sdl_scope): String
  server_ping: String
  server_info: server_info
  server_health: JSON
  collections: [directus_collections!]!
  collections_by_name(name: String!): directus_collections
  fields: [directus_fields!]!
  fields_in_collection(collection: String!): [directus_fields!]!
  fields_by_name(collection: String!, field: String!): directus_fields
  relations: [directus_relations!]!
  relations_in_collection(collection: String!): [directus_relations!]!
  relations_by_name(collection: String!, field: String!): directus_relations
  extensions: [directus_extensions!]!
  users_me: directus_users
  permissions_me: permissions_me_type
  roles_me: [directus_roles]
  policies_me_globals: policy_me_globals_type
  roles(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles!]!
  roles_by_id(id: ID!, version: String): directus_roles
  roles_aggregated(groupBy: [String], filter: directus_roles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_roles_aggregated!]!
  files(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_files!]!
  files_by_id(id: ID!, version: String): directus_files
  files_aggregated(groupBy: [String], filter: directus_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_files_aggregated!]!
  folders(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_folders!]!
  folders_by_id(id: ID!, version: String): directus_folders
  folders_aggregated(groupBy: [String], filter: directus_folders_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_folders_aggregated!]!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_activity!]!
  activity_by_id(id: ID!, version: String): directus_activity
  activity_aggregated(groupBy: [String], filter: directus_activity_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_activity_aggregated!]!
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions!]!
  revisions_by_id(id: ID!, version: String): directus_revisions
  revisions_aggregated(groupBy: [String], filter: directus_revisions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_revisions_aggregated!]!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions!]!
  permissions_by_id(id: ID!, version: String): directus_permissions
  permissions_aggregated(groupBy: [String], filter: directus_permissions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_permissions_aggregated!]!
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users!]!
  users_by_id(id: ID!, version: String): directus_users
  users_aggregated(groupBy: [String], filter: directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_users_aggregated!]!
  presets(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_presets!]!
  presets_by_id(id: ID!, version: String): directus_presets
  presets_aggregated(groupBy: [String], filter: directus_presets_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_presets_aggregated!]!
  webhooks(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_webhooks!]!
  webhooks_by_id(id: ID!, version: String): directus_webhooks
  webhooks_aggregated(groupBy: [String], filter: directus_webhooks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_webhooks_aggregated!]!
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels!]!
  panels_by_id(id: ID!, version: String): directus_panels
  panels_aggregated(groupBy: [String], filter: directus_panels_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_panels_aggregated!]!
  notifications(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_notifications!]!
  notifications_by_id(id: ID!, version: String): directus_notifications
  notifications_aggregated(groupBy: [String], filter: directus_notifications_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_notifications_aggregated!]!
  shares(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_shares!]!
  shares_by_id(id: ID!, version: String): directus_shares
  shares_aggregated(groupBy: [String], filter: directus_shares_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_shares_aggregated!]!
  flows(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_flows!]!
  flows_by_id(id: ID!, version: String): directus_flows
  flows_aggregated(groupBy: [String], filter: directus_flows_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_flows_aggregated!]!
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations!]!
  operations_by_id(id: ID!, version: String): directus_operations
  operations_aggregated(groupBy: [String], filter: directus_operations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_operations_aggregated!]!
  dashboards(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_dashboards!]!
  dashboards_by_id(id: ID!, version: String): directus_dashboards
  dashboards_aggregated(groupBy: [String], filter: directus_dashboards_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_dashboards_aggregated!]!
  translations(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_translations!]!
  translations_by_id(id: ID!, version: String): directus_translations
  translations_aggregated(groupBy: [String], filter: directus_translations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_translations_aggregated!]!
  access(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access!]!
  access_by_id(id: ID!, version: String): directus_access
  access_aggregated(groupBy: [String], filter: directus_access_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_access_aggregated!]!
  comments(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_comments!]!
  comments_by_id(id: ID!, version: String): directus_comments
  comments_aggregated(groupBy: [String], filter: directus_comments_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_comments_aggregated!]!
  versions(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_versions!]!
  versions_by_id(id: ID!, version: String): directus_versions
  versions_aggregated(groupBy: [String], filter: directus_versions_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_versions_aggregated!]!
  settings(version: String): directus_settings
  policies(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_policies!]!
  policies_by_id(id: ID!, version: String): directus_policies
  policies_aggregated(groupBy: [String], filter: directus_policies_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_policies_aggregated!]!
}

type Mutation {
  auth_login(email: String!, password: String!, mode: auth_mode, otp: String): auth_tokens
  auth_refresh(refresh_token: String, mode: auth_mode): auth_tokens
  auth_logout(refresh_token: String, mode: auth_mode): Boolean
  auth_password_request(email: String!, reset_url: String): Boolean
  auth_password_reset(token: String!, password: String!): Boolean
  users_me_tfa_generate(password: String!): users_me_tfa_generate_data
  users_me_tfa_enable(otp: String!, secret: String!): Boolean
  users_me_tfa_disable(otp: String!): Boolean
  utils_random_string(length: Int): String
  utils_hash_generate(string: String!): String
  utils_hash_verify(string: String!, hash: String!): Boolean
  utils_sort(collection: String!, item: ID!, to: ID!): Boolean
  utils_revert(revision: ID!): Boolean
  utils_cache_clear: Void
  users_invite_accept(token: String!, password: String!): Boolean
  users_register(email: String!, password: String!, verification_url: String, first_name: String, last_name: String): Boolean
  users_register_verify(token: String!): Boolean
  create_collections_item(data: write_directus_collections_input!): write_directus_collections
  update_collections_item(collection: String!, data: write_directus_collections_input!): write_directus_collections
  delete_collections_item(collection: String!): delete_collection
  create_fields_item(collection: String!, data: write_directus_fields_input!): write_directus_fields
  update_fields_item(collection: String!, field: String!, data: write_directus_fields_input!): write_directus_fields
  delete_fields_item(collection: String!, field: String!): delete_field
  create_relations_item(data: write_directus_relations_input!): write_directus_relations
  update_relations_item(collection: String!, field: String!, data: write_directus_relations_input!): write_directus_relations
  delete_relations_item(collection: String!, field: String!): delete_relation
  update_extensions_item(id: ID, data: update_directus_extensions_inputInput): directus_extensions
  update_users_me(data: update_directus_users_input): directus_users
  import_file(url: String!, data: create_directus_files_input): directus_files
  users_invite(email: String!, role: String!, invite_url: String): Boolean
  create_roles_items(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_roles_input!]): [directus_roles!]!
  create_roles_item(data: create_directus_roles_input!): directus_roles
  create_files_items(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_files_input!]): [directus_files!]!
  create_files_item(data: create_directus_files_input!): directus_files
  create_folders_items(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_folders_input!]): [directus_folders!]!
  create_folders_item(data: create_directus_folders_input!): directus_folders
  create_permissions_items(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_permissions_input!]): [directus_permissions!]!
  create_permissions_item(data: create_directus_permissions_input!): directus_permissions
  create_users_items(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_users_input!]): [directus_users!]!
  create_users_item(data: create_directus_users_input!): directus_users
  create_presets_items(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_presets_input!]): [directus_presets!]!
  create_presets_item(data: create_directus_presets_input!): directus_presets
  create_webhooks_items(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_webhooks_input!]): [directus_webhooks!]!
  create_webhooks_item(data: create_directus_webhooks_input!): directus_webhooks
  create_panels_items(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_panels_input!]): [directus_panels!]!
  create_panels_item(data: create_directus_panels_input!): directus_panels
  create_notifications_items(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_notifications_input!]): [directus_notifications!]!
  create_notifications_item(data: create_directus_notifications_input!): directus_notifications
  create_shares_items(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_shares_input!]): [directus_shares!]!
  create_shares_item(data: create_directus_shares_input!): directus_shares
  create_flows_items(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_flows_input!]): [directus_flows!]!
  create_flows_item(data: create_directus_flows_input!): directus_flows
  create_operations_items(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_operations_input!]): [directus_operations!]!
  create_operations_item(data: create_directus_operations_input!): directus_operations
  create_dashboards_items(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_dashboards_input!]): [directus_dashboards!]!
  create_dashboards_item(data: create_directus_dashboards_input!): directus_dashboards
  create_translations_items(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_translations_input!]): [directus_translations!]!
  create_translations_item(data: create_directus_translations_input!): directus_translations
  create_access_items(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_access_input!]): [directus_access!]!
  create_access_item(data: create_directus_access_input!): directus_access
  create_comments_items(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_comments_input!]): [directus_comments!]!
  create_comments_item(data: create_directus_comments_input!): directus_comments
  create_versions_items(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_versions_input!]): [directus_versions!]!
  create_versions_item(data: create_directus_versions_input!): directus_versions
  create_policies_items(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_policies_input!]): [directus_policies!]!
  create_policies_item(data: create_directus_policies_input!): directus_policies
  update_roles_items(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_roles_input!): [directus_roles!]!
  update_roles_batch(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_roles_input!]): [directus_roles!]!
  update_roles_item(id: ID!, data: update_directus_roles_input!): directus_roles
  update_files_items(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_files_input!): [directus_files!]!
  update_files_batch(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_files_input!]): [directus_files!]!
  update_files_item(id: ID!, data: update_directus_files_input!): directus_files
  update_folders_items(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_folders_input!): [directus_folders!]!
  update_folders_batch(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_folders_input!]): [directus_folders!]!
  update_folders_item(id: ID!, data: update_directus_folders_input!): directus_folders
  update_permissions_items(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_permissions_input!): [directus_permissions!]!
  update_permissions_batch(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_permissions_input!]): [directus_permissions!]!
  update_permissions_item(id: ID!, data: update_directus_permissions_input!): directus_permissions
  update_users_items(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_users_input!): [directus_users!]!
  update_users_batch(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_users_input!]): [directus_users!]!
  update_users_item(id: ID!, data: update_directus_users_input!): directus_users
  update_presets_items(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_presets_input!): [directus_presets!]!
  update_presets_batch(filter: directus_presets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_presets_input!]): [directus_presets!]!
  update_presets_item(id: ID!, data: update_directus_presets_input!): directus_presets
  update_webhooks_items(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_webhooks_input!): [directus_webhooks!]!
  update_webhooks_batch(filter: directus_webhooks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_webhooks_input!]): [directus_webhooks!]!
  update_webhooks_item(id: ID!, data: update_directus_webhooks_input!): directus_webhooks
  update_panels_items(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_panels_input!): [directus_panels!]!
  update_panels_batch(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_panels_input!]): [directus_panels!]!
  update_panels_item(id: ID!, data: update_directus_panels_input!): directus_panels
  update_notifications_items(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_notifications_input!): [directus_notifications!]!
  update_notifications_batch(filter: directus_notifications_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_notifications_input!]): [directus_notifications!]!
  update_notifications_item(id: ID!, data: update_directus_notifications_input!): directus_notifications
  update_shares_items(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_shares_input!): [directus_shares!]!
  update_shares_batch(filter: directus_shares_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_shares_input!]): [directus_shares!]!
  update_shares_item(id: ID!, data: update_directus_shares_input!): directus_shares
  update_flows_items(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_flows_input!): [directus_flows!]!
  update_flows_batch(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_flows_input!]): [directus_flows!]!
  update_flows_item(id: ID!, data: update_directus_flows_input!): directus_flows
  update_operations_items(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_operations_input!): [directus_operations!]!
  update_operations_batch(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_operations_input!]): [directus_operations!]!
  update_operations_item(id: ID!, data: update_directus_operations_input!): directus_operations
  update_dashboards_items(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_dashboards_input!): [directus_dashboards!]!
  update_dashboards_batch(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_dashboards_input!]): [directus_dashboards!]!
  update_dashboards_item(id: ID!, data: update_directus_dashboards_input!): directus_dashboards
  update_translations_items(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_translations_input!): [directus_translations!]!
  update_translations_batch(filter: directus_translations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_translations_input!]): [directus_translations!]!
  update_translations_item(id: ID!, data: update_directus_translations_input!): directus_translations
  update_access_items(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_access_input!): [directus_access!]!
  update_access_batch(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_access_input!]): [directus_access!]!
  update_access_item(id: ID!, data: update_directus_access_input!): directus_access
  update_comments_items(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_comments_input!): [directus_comments!]!
  update_comments_batch(filter: directus_comments_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_comments_input!]): [directus_comments!]!
  update_comments_item(id: ID!, data: update_directus_comments_input!): directus_comments
  update_versions_items(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_versions_input!): [directus_versions!]!
  update_versions_batch(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_versions_input!]): [directus_versions!]!
  update_versions_item(id: ID!, data: update_directus_versions_input!): directus_versions
  update_settings(data: update_directus_settings_input!): directus_settings
  update_policies_items(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_policies_input!): [directus_policies!]!
  update_policies_batch(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_policies_input!]): [directus_policies!]!
  update_policies_item(id: ID!, data: update_directus_policies_input!): directus_policies
  delete_roles_items(ids: [ID]!): delete_many
  delete_roles_item(id: ID!): delete_one
  delete_files_items(ids: [ID]!): delete_many
  delete_files_item(id: ID!): delete_one
  delete_folders_items(ids: [ID]!): delete_many
  delete_folders_item(id: ID!): delete_one
  delete_permissions_items(ids: [ID]!): delete_many
  delete_permissions_item(id: ID!): delete_one
  delete_users_items(ids: [ID]!): delete_many
  delete_users_item(id: ID!): delete_one
  delete_presets_items(ids: [ID]!): delete_many
  delete_presets_item(id: ID!): delete_one
  delete_webhooks_items(ids: [ID]!): delete_many
  delete_webhooks_item(id: ID!): delete_one
  delete_panels_items(ids: [ID]!): delete_many
  delete_panels_item(id: ID!): delete_one
  delete_notifications_items(ids: [ID]!): delete_many
  delete_notifications_item(id: ID!): delete_one
  delete_shares_items(ids: [ID]!): delete_many
  delete_shares_item(id: ID!): delete_one
  delete_flows_items(ids: [ID]!): delete_many
  delete_flows_item(id: ID!): delete_one
  delete_operations_items(ids: [ID]!): delete_many
  delete_operations_item(id: ID!): delete_one
  delete_dashboards_items(ids: [ID]!): delete_many
  delete_dashboards_item(id: ID!): delete_one
  delete_translations_items(ids: [ID]!): delete_many
  delete_translations_item(id: ID!): delete_one
  delete_access_items(ids: [ID]!): delete_many
  delete_access_item(id: ID!): delete_one
  delete_comments_items(ids: [ID]!): delete_many
  delete_comments_item(id: ID!): delete_one
  delete_versions_items(ids: [ID]!): delete_many
  delete_versions_item(id: ID!): delete_one
  delete_policies_items(ids: [ID]!): delete_many
  delete_policies_item(id: ID!): delete_one
}

type Subscription {
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  relations_mutated(event: EventEnum): relations_mutated
  attestations_mutated(event: EventEnum): attestations_mutated
  attestations_directus_users_mutated(event: EventEnum): attestations_directus_users_mutated
  contactInfos_mutated(event: EventEnum): contactInfos_mutated
  crowdfundings_mutated(event: EventEnum): crowdfundings_mutated
  features_mutated(event: EventEnum): features_mutated
  gallery_mutated(event: EventEnum): gallery_mutated
  groupSubheaders_mutated(event: EventEnum): groupSubheaders_mutated
  groupSubheaders_groupTypes_mutated(event: EventEnum): groupSubheaders_groupTypes_mutated
  groupTypes_mutated(event: EventEnum): groupTypes_mutated
  marker_icons_mutated(event: EventEnum): marker_icons_mutated
  inviteLinks_mutated(event: EventEnum): inviteLinks_mutated
  items_mutated(event: EventEnum): items_mutated
  itemSecrets_mutated(event: EventEnum): itemSecrets_mutated
  layers_mutated(event: EventEnum): layers_mutated
  items_files_mutated(event: EventEnum): items_files_mutated
  items_items_mutated(event: EventEnum): items_items_mutated
  items_tags_mutated(event: EventEnum): items_tags_mutated
  tags_mutated(event: EventEnum): tags_mutated
  items_tags_1_mutated(event: EventEnum): items_tags_1_mutated
  junction_directus_users_tags_mutated(event: EventEnum): junction_directus_users_tags_mutated
  junction_directus_users_tags_1_mutated(event: EventEnum): junction_directus_users_tags_1_mutated
  types_mutated(event: EventEnum): types_mutated
  layers_directus_users_1_mutated(event: EventEnum): layers_directus_users_1_mutated
  layers_files_mutated(event: EventEnum): layers_files_mutated
  layers_maps_mutated(event: EventEnum): layers_maps_mutated
  maps_mutated(event: EventEnum): maps_mutated
  Themes_mutated(event: EventEnum): Themes_mutated
  startEnd_mutated(event: EventEnum): startEnd_mutated
  team_mutated(event: EventEnum): team_mutated
  texts_mutated(event: EventEnum): texts_mutated
  types_profileTemplate_mutated(event: EventEnum): types_profileTemplate_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""GeoJSON value"""
scalar GraphQLGeoJSON

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

scalar permissions_me_type

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

"""Represents NULL values"""
scalar Void

enum auth_mode {
  json
  cookie
  session
}

enum EventEnum {
  create
  update
  delete
}

enum graphql_sdl_scope {
  items
  system
}

union types_profileTemplate_item_union = groupSubheaders | contactInfos | texts | startEnd | gallery | crowdfundings | inviteLinks | relations

type attestations {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  emoji: String
  id: ID!
  shape: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  to(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [attestations_directus_users]
  to_func: count_functions
}

type attestations_directus_users {
  attestations_id(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): attestations
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type attestations_directus_users_mutated {
  key: ID!
  event: EventEnum
  data: attestations_directus_users
}

type attestations_mutated {
  key: ID!
  event: EventEnum
  data: attestations
}

type auth_tokens {
  access_token: String
  expires: GraphQLBigInt
  refresh_token: String
}

type contactInfos {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type contactInfos_mutated {
  key: ID!
  event: EventEnum
  data: contactInfos
}

type count_functions {
  count: Int
}

type crowdfundings {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type crowdfundings_mutated {
  key: ID!
  event: EventEnum
  data: crowdfundings
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_collection {
  collection: String
}

type delete_field {
  collection: String
  field: String
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type delete_relation {
  collection: String
  field: String
}

type directus_access {
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
  sort: Int
}

type directus_access_aggregated {
  group: JSON
  countAll: Int
  count: directus_access_aggregated_count
  countDistinct: directus_access_aggregated_count
  avg: directus_access_aggregated_fields
  sum: directus_access_aggregated_fields
  avgDistinct: directus_access_aggregated_fields
  sumDistinct: directus_access_aggregated_fields
  min: directus_access_aggregated_fields
  max: directus_access_aggregated_fields
}

type directus_access_aggregated_count {
  id: Int
  role: Int
  user: Int
  policy: Int
  sort: Int
}

type directus_access_aggregated_fields {
  sort: Float
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  action: String!
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  timestamp: Date
  timestamp_func: datetime_functions
  ip: String
  user_agent: String
  collection: String!
  item: String!
  origin: String
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_aggregated {
  group: JSON
  countAll: Int
  count: directus_activity_aggregated_count
  countDistinct: directus_activity_aggregated_count
  avg: directus_activity_aggregated_fields
  sum: directus_activity_aggregated_fields
  avgDistinct: directus_activity_aggregated_fields
  sumDistinct: directus_activity_aggregated_fields
  min: directus_activity_aggregated_fields
  max: directus_activity_aggregated_fields
}

type directus_activity_aggregated_count {
  id: Int
  action: Int
  user: Int
  timestamp: Int
  ip: Int
  user_agent: Int
  collection: Int
  item: Int
  origin: Int
  revisions: Int
}

type directus_activity_aggregated_fields {
  id: Float
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_collections {
  collection: String
  meta: directus_collections_meta
  schema: directus_collections_schema
}

type directus_collections_meta {
  collection: String!
  icon: String
  note: String
  display_template: String
  hidden: Boolean!
  singleton: Boolean!
  translations: JSON
  archive_field: String
  archive_app_filter: Boolean!
  archive_value: String
  unarchive_value: String
  sort_field: String
  accountability: String
  color: String
  item_duplication_fields: JSON
  sort: Int
  group: String
  collapse: String!
  preview_url: String
  versioning: Boolean!
}

type directus_collections_schema {
  name: String
  comment: String
}

type directus_comments {
  id: ID!
  collection: String!
  item: String!
  comment: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_comments_aggregated {
  group: JSON
  countAll: Int
  count: directus_comments_aggregated_count
  countDistinct: directus_comments_aggregated_count
}

type directus_comments_aggregated_count {
  id: Int
  collection: Int
  item: Int
  comment: Int
  date_created: Int
  date_updated: Int
  user_created: Int
  user_updated: Int
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  color: String
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_aggregated {
  group: JSON
  countAll: Int
  count: directus_dashboards_aggregated_count
  countDistinct: directus_dashboards_aggregated_count
}

type directus_dashboards_aggregated_count {
  id: Int
  name: Int
  icon: Int
  note: Int
  date_created: Int
  user_created: Int
  color: Int
  panels: Int
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_extensions {
  bundle: String
  name: String!
  schema: directus_extensions_schema
  meta: directus_extensions_meta
}

type directus_extensions_meta {
  enabled: Boolean
}

type directus_extensions_schema {
  type: String
  local: Boolean
}

type directus_fields {
  collection: String
  field: String
  type: String
  meta: directus_fields_meta
  schema: directus_fields_schema
}

type directus_fields_meta {
  id: Int!
  collection: String!
  field: String!
  special: [String]
  interface: String
  options: JSON
  display: String
  display_options: JSON
  readonly: Boolean!
  hidden: Boolean!
  sort: Int
  width: String
  translations: JSON
  note: String
  conditions: JSON
  required: Boolean
  group: String
  validation: JSON
  validation_message: String
}

type directus_fields_schema {
  name: String
  table: String
  data_type: String
  default_value: String
  max_length: Int
  numeric_precision: Int
  numeric_scale: Int
  is_generated: Boolean
  generation_expression: String
  is_indexed: Boolean
  is_nullable: Boolean
  is_unique: Boolean
  is_primary_key: Boolean
  has_auto_increment: Boolean
  foreign_key_column: String
  foreign_key_table: String
  comment: String
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  tus_data_func: count_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
}

type directus_files_aggregated {
  group: JSON
  countAll: Int
  count: directus_files_aggregated_count
  countDistinct: directus_files_aggregated_count
  avg: directus_files_aggregated_fields
  sum: directus_files_aggregated_fields
  avgDistinct: directus_files_aggregated_fields
  sumDistinct: directus_files_aggregated_fields
  min: directus_files_aggregated_fields
  max: directus_files_aggregated_fields
}

type directus_files_aggregated_count {
  id: Int
  storage: Int
  filename_disk: Int
  filename_download: Int
  title: Int
  type: Int
  folder: Int
  uploaded_by: Int
  created_on: Int
  modified_by: Int
  modified_on: Int
  charset: Int
  filesize: Int
  width: Int
  height: Int
  duration: Int
  embed: Int
  description: Int
  location: Int
  tags: Int
  metadata: Int
  focal_point_x: Int
  focal_point_y: Int
  tus_id: Int
  tus_data: Int
  uploaded_on: Int
}

type directus_files_aggregated_fields {
  filesize: Float
  width: Float
  height: Float
  duration: Float
  focal_point_x: Float
  focal_point_y: Float
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  options_func: count_functions
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_aggregated {
  group: JSON
  countAll: Int
  count: directus_flows_aggregated_count
  countDistinct: directus_flows_aggregated_count
}

type directus_flows_aggregated_count {
  id: Int
  name: Int
  icon: Int
  color: Int
  description: Int
  status: Int
  trigger: Int
  accountability: Int
  options: Int
  operation: Int
  date_created: Int
  user_created: Int
  operations: Int
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  id: ID!
  name: String!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_aggregated {
  group: JSON
  countAll: Int
  count: directus_folders_aggregated_count
  countDistinct: directus_folders_aggregated_count
}

type directus_folders_aggregated_count {
  id: Int
  name: Int
  parent: Int
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  timestamp: Date
  timestamp_func: datetime_functions
  status: String
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  subject: String!
  message: String
  collection: String
  item: String
}

type directus_notifications_aggregated {
  group: JSON
  countAll: Int
  count: directus_notifications_aggregated_count
  countDistinct: directus_notifications_aggregated_count
  avg: directus_notifications_aggregated_fields
  sum: directus_notifications_aggregated_fields
  avgDistinct: directus_notifications_aggregated_fields
  sumDistinct: directus_notifications_aggregated_fields
  min: directus_notifications_aggregated_fields
  max: directus_notifications_aggregated_fields
}

type directus_notifications_aggregated_count {
  id: Int
  timestamp: Int
  status: Int
  recipient: Int
  sender: Int
  subject: Int
  message: Int
  collection: Int
  item: Int
}

type directus_notifications_aggregated_fields {
  id: Float
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  id: ID!
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  options_func: count_functions
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_aggregated {
  group: JSON
  countAll: Int
  count: directus_operations_aggregated_count
  countDistinct: directus_operations_aggregated_count
  avg: directus_operations_aggregated_fields
  sum: directus_operations_aggregated_fields
  avgDistinct: directus_operations_aggregated_fields
  sumDistinct: directus_operations_aggregated_fields
  min: directus_operations_aggregated_fields
  max: directus_operations_aggregated_fields
}

type directus_operations_aggregated_count {
  id: Int
  name: Int
  key: Int
  type: Int
  position_x: Int
  position_y: Int
  options: Int
  resolve: Int
  reject: Int
  flow: Int
  date_created: Int
  user_created: Int
}

type directus_operations_aggregated_fields {
  position_x: Float
  position_y: Float
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_aggregated {
  group: JSON
  countAll: Int
  count: directus_panels_aggregated_count
  countDistinct: directus_panels_aggregated_count
  avg: directus_panels_aggregated_fields
  sum: directus_panels_aggregated_fields
  avgDistinct: directus_panels_aggregated_fields
  sumDistinct: directus_panels_aggregated_fields
  min: directus_panels_aggregated_fields
  max: directus_panels_aggregated_fields
}

type directus_panels_aggregated_count {
  id: Int
  dashboard: Int
  name: Int
  icon: Int
  color: Int
  show_header: Int
  note: Int
  type: Int
  position_x: Int
  position_y: Int
  width: Int
  height: Int
  options: Int
  date_created: Int
  user_created: Int
}

type directus_panels_aggregated_fields {
  position_x: Float
  position_y: Float
  width: Float
  height: Float
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  permissions_func: count_functions
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  fields: [String]
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_aggregated {
  group: JSON
  countAll: Int
  count: directus_permissions_aggregated_count
  countDistinct: directus_permissions_aggregated_count
  avg: directus_permissions_aggregated_fields
  sum: directus_permissions_aggregated_fields
  avgDistinct: directus_permissions_aggregated_fields
  sumDistinct: directus_permissions_aggregated_fields
  min: directus_permissions_aggregated_fields
  max: directus_permissions_aggregated_fields
}

type directus_permissions_aggregated_count {
  id: Int
  collection: Int
  action: Int
  permissions: Int
  validation: Int
  presets: Int
  fields: Int
  policy: Int
}

type directus_permissions_aggregated_fields {
  id: Float
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_aggregated {
  group: JSON
  countAll: Int
  count: directus_policies_aggregated_count
  countDistinct: directus_policies_aggregated_count
}

type directus_policies_aggregated_count {
  id: Int
  name: Int
  icon: Int
  description: Int
  ip_access: Int

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Int
  admin_access: Int
  app_access: Int
  permissions: Int
  users: Int
  roles: Int
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  id: ID!
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  refresh_interval: Int
  filter: JSON
  filter_func: count_functions
  icon: String
  color: String
}

type directus_presets_aggregated {
  group: JSON
  countAll: Int
  count: directus_presets_aggregated_count
  countDistinct: directus_presets_aggregated_count
  avg: directus_presets_aggregated_fields
  sum: directus_presets_aggregated_fields
  avgDistinct: directus_presets_aggregated_fields
  sumDistinct: directus_presets_aggregated_fields
  min: directus_presets_aggregated_fields
  max: directus_presets_aggregated_fields
}

type directus_presets_aggregated_count {
  id: Int
  bookmark: Int
  user: Int
  role: Int
  collection: Int
  search: Int
  layout: Int
  layout_query: Int
  layout_options: Int
  refresh_interval: Int
  filter: Int
  icon: Int
  color: Int
}

type directus_presets_aggregated_fields {
  id: Float
  refresh_interval: Float
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_relations {
  collection: String
  field: String
  related_collection: String
  schema: directus_relations_schema
  meta: directus_relations_meta
}

type directus_relations_meta {
  id: Int
  many_collection: String
  many_field: String
  one_collection: String
  one_field: String
  one_collection_field: String
  one_allowed_collections: [String]
  junction_field: String
  sort_field: String
  one_deselect_action: String
}

type directus_relations_schema {
  table: String!
  column: String!
  foreign_key_table: String!
  foreign_key_column: String!
  constraint_name: String
  on_update: String!
  on_delete: String!
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  collection: String!
  item: String!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_aggregated {
  group: JSON
  countAll: Int
  count: directus_revisions_aggregated_count
  countDistinct: directus_revisions_aggregated_count
  avg: directus_revisions_aggregated_fields
  sum: directus_revisions_aggregated_fields
  avgDistinct: directus_revisions_aggregated_fields
  sumDistinct: directus_revisions_aggregated_fields
  min: directus_revisions_aggregated_fields
  max: directus_revisions_aggregated_fields
}

type directus_revisions_aggregated_count {
  id: Int
  activity: Int
  collection: Int
  item: Int
  data: Int
  delta: Int
  parent: Int
  version: Int
}

type directus_revisions_aggregated_fields {
  id: Float
  activity: Float
  parent: Float
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_aggregated {
  group: JSON
  countAll: Int
  count: directus_roles_aggregated_count
  countDistinct: directus_roles_aggregated_count
}

type directus_roles_aggregated_count {
  id: Int
  name: Int
  icon: Int
  description: Int

  """$t:field_options.directus_roles.parent_note"""
  parent: Int

  """$t:field_options.directus_roles.children_note"""
  children: Int
  policies: Int
  users: Int
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  id: ID!
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  basemaps: JSON
  basemaps_func: count_functions
  mapbox_key: String
  module_bar: JSON
  module_bar_func: count_functions
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  default_theme_dark: String
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  visual_editor_urls: JSON
  visual_editor_urls_func: count_functions
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_aggregated {
  group: JSON
  countAll: Int
  count: directus_shares_aggregated_count
  countDistinct: directus_shares_aggregated_count
  avg: directus_shares_aggregated_fields
  sum: directus_shares_aggregated_fields
  avgDistinct: directus_shares_aggregated_fields
  sumDistinct: directus_shares_aggregated_fields
  min: directus_shares_aggregated_fields
  max: directus_shares_aggregated_fields
}

type directus_shares_aggregated_count {
  id: Int
  name: Int
  collection: Int
  item: Int
  role: Int

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Int
  user_created: Int
  date_created: Int

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Int

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Int
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_aggregated_fields {
  times_used: Float

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Float
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  id: ID!
  language: String!
  key: String!
  value: String!
}

type directus_translations_aggregated {
  group: JSON
  countAll: Int
  count: directus_translations_aggregated_count
  countDistinct: directus_translations_aggregated_count
}

type directus_translations_aggregated_count {
  id: Int
  language: Int
  key: Int
  value: Int
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  imported: Boolean
  wc_user: Boolean
  notifications(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_directus_users_1]
  notifications_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_aggregated {
  group: JSON
  countAll: Int
  count: directus_users_aggregated_count
  countDistinct: directus_users_aggregated_count
}

type directus_users_aggregated_count {
  id: Int
  first_name: Int
  last_name: Int
  email: Int
  password: Int
  location: Int
  title: Int
  description: Int
  tags: Int
  avatar: Int
  language: Int
  tfa_secret: Int
  status: Int
  role: Int
  token: Int
  last_access: Int
  last_page: Int
  provider: Int
  external_identifier: Int
  auth_data: Int
  email_notifications: Int
  appearance: Int
  theme_dark: Int
  theme_light: Int
  theme_light_overrides: Int
  theme_dark_overrides: Int
  imported: Int
  wc_user: Int
  notifications: Int
  policies: Int
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  id: ID!
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  delta: JSON
  delta_func: count_functions
}

type directus_versions_aggregated {
  group: JSON
  countAll: Int
  count: directus_versions_aggregated_count
  countDistinct: directus_versions_aggregated_count
}

type directus_versions_aggregated_count {
  id: Int
  key: Int
  name: Int
  collection: Int
  item: Int
  hash: Int
  date_created: Int
  date_updated: Int
  user_created: Int
  user_updated: Int
  delta: Int
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  id: ID!
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  headers_func: count_functions
  was_active_before_deprecation: Boolean!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_aggregated {
  group: JSON
  countAll: Int
  count: directus_webhooks_aggregated_count
  countDistinct: directus_webhooks_aggregated_count
  avg: directus_webhooks_aggregated_fields
  sum: directus_webhooks_aggregated_fields
  avgDistinct: directus_webhooks_aggregated_fields
  sumDistinct: directus_webhooks_aggregated_fields
  min: directus_webhooks_aggregated_fields
  max: directus_webhooks_aggregated_fields
}

type directus_webhooks_aggregated_count {
  id: Int
  name: Int
  method: Int
  url: Int
  status: Int
  data: Int
  actions: Int
  collections: Int
  headers: Int
  was_active_before_deprecation: Int
  migrated_flow: Int
}

type directus_webhooks_aggregated_fields {
  id: Float
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type features {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  id: ID!
  sort: Int
  status: String
  symbol: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type features_mutated {
  key: ID!
  event: EventEnum
  data: features
}

type gallery {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  hideInputLabel: Boolean
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type gallery_mutated {
  key: ID!
  event: EventEnum
  data: gallery
}

type groupSubheaders {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  groupStates: JSON
  groupStates_func: count_functions
  id: ID!
  platforms: JSON
  platforms_func: count_functions
  shareBaseUrl: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  groupTypes(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [groupSubheaders_groupTypes]
  groupTypes_func: count_functions
}

type groupSubheaders_groupTypes {
  groupSubheaders_id(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): groupSubheaders
  groupTypes_id(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): groupTypes
  id: ID!
}

type groupSubheaders_groupTypes_mutated {
  key: ID!
  event: EventEnum
  data: groupSubheaders_groupTypes
}

type groupSubheaders_mutated {
  key: ID!
  event: EventEnum
  data: groupSubheaders
}

type groupTypes {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  name: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type groupTypes_mutated {
  key: ID!
  event: EventEnum
  data: groupTypes
}

type inviteLinks {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type inviteLinks_mutated {
  key: ID!
  event: EventEnum
  data: inviteLinks
}

type items {
  color: String
  contact: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  draft: Boolean
  end: Date
  end_func: datetime_functions
  extended: JSON
  extended_func: count_functions
  group_type: String
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  image_external: String
  layer(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  name: String
  next_appointment: String
  openCollectiveSlug: String
  parent(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  position: GraphQLGeoJSON
  public_edit: Boolean
  slug: String
  start: Date
  start_func: datetime_functions
  status: String
  subname: String
  telephone: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  gallery(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_files]
  gallery_func: count_functions
  needs(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags_1]
  needs_func: count_functions
  offers(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags]
  offers_func: count_functions
  relations(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_items]
  relations_func: count_functions
  secrets(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [itemSecrets]
  secrets_func: count_functions
}

type items_files {
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
}

type items_files_mutated {
  key: ID!
  event: EventEnum
  data: items_files
}

type items_items {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  related_items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  type: String
}

type items_items_mutated {
  key: ID!
  event: EventEnum
  data: items_items
}

type items_mutated {
  key: ID!
  event: EventEnum
  data: items
}

type items_tags {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type items_tags_1 {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type items_tags_1_mutated {
  key: ID!
  event: EventEnum
  data: items_tags_1
}

type items_tags_mutated {
  key: ID!
  event: EventEnum
  data: items_tags
}

type itemSecrets {
  item(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  secret: ID!
}

type itemSecrets_mutated {
  key: ID!
  event: EventEnum
  data: itemSecrets
}

type junction_directus_users_tags {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type junction_directus_users_tags_1 {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type junction_directus_users_tags_1_mutated {
  key: ID!
  event: EventEnum
  data: junction_directus_users_tags_1
}

type junction_directus_users_tags_mutated {
  key: ID!
  event: EventEnum
  data: junction_directus_users_tags
}

type layers {
  id: ID!
  index_plus_button: Boolean
  itemType(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): types
  item_presets: JSON
  item_presets_func: count_functions
  listed: Boolean
  markerDefaultColor2: String
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_maps]
  maps_func: count_functions
  notifications(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_directus_users_1]
  notifications_func: count_functions
}

type layers_directus_users_1 {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
}

type layers_directus_users_1_mutated {
  key: ID!
  event: EventEnum
  data: layers_directus_users_1
}

type layers_files {
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
}

type layers_files_mutated {
  key: ID!
  event: EventEnum
  data: layers_files
}

type layers_maps {
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
  maps_id(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): maps
}

type layers_maps_mutated {
  key: ID!
  event: EventEnum
  data: layers_maps
}

type layers_mutated {
  key: ID!
  event: EventEnum
  data: layers
}

type maps {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Themes

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  geo_func: count_functions
  hide_signup: Boolean
  id: ID!
  info_open: Boolean
  logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean!
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_maps]
  layers_func: count_functions
}

type maps_mutated {
  key: ID!
  event: EventEnum
  data: maps
}

type marker_icons {
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  image_outline(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  size: Float
  size_outline: Float
}

type marker_icons_mutated {
  key: ID!
  event: EventEnum
  data: marker_icons
}

type policy_me_globals_type {
  enforce_tfa: Boolean
  app_access: Boolean
  admin_access: Boolean
}

type relations {
  direction: String
  heading: String
  hideWhenEmpty: Boolean
  id: ID!
  relation: String
}

type relations_mutated {
  key: ID!
  event: EventEnum
  data: relations
}

type server_info {
  project: server_info_project
  rateLimit: Boolean
  rateLimitGlobal: Boolean
  websocket: Boolean
  queryLimit: server_info_query_limit
}

type server_info_project {
  project_name: String
  project_descriptor: String
  project_logo: String
  project_color: String
  default_language: String
  public_foreground: String
  public_background: String
  public_note: String
  custom_css: String
  public_registration: Boolean
  public_registration_verify_email: Boolean
}

type server_info_query_limit {
  default: Int
  max: Int
}

type startEnd {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type startEnd_mutated {
  key: ID!
  event: EventEnum
  data: startEnd
}

type tags {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  map(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): maps
  name: String
  offer_or_need: Boolean
  user_created: ID
}

type tags_mutated {
  key: ID!
  event: EventEnum
  data: tags
}

type team {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  name: String
  role: String
  sort: Int
  status: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type team_mutated {
  key: ID!
  event: EventEnum
  data: team
}

type texts {
  dataField: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  hideWhenEmpty: Boolean
  id: ID!
  showMarkdownHint: Boolean
  size: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type texts_mutated {
  key: ID!
  event: EventEnum
  data: texts
}

type Themes {
  theme: ID!
}

type Themes_mutated {
  key: ID!
  event: EventEnum
  data: Themes
}

type types {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  icon_as_labels: Boolean
  id: ID!
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profileTemplate(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [types_profileTemplate]
  profileTemplate_func: count_functions
}

type types_mutated {
  key: ID!
  event: EventEnum
  data: types
}

type types_profileTemplate {
  collection: String
  id: ID!
  item: types_profileTemplate_item_union
  sort: Int
  types_id(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): types
}

type types_profileTemplate_mutated {
  key: ID!
  event: EventEnum
  data: types_profileTemplate
}

type users_me_tfa_generate_data {
  secret: String
  otpauth_url: String
}

type write_directus_collections {
  collection: String
  meta: write_directus_collections_meta
  schema: write_directus_collections_schema
}

type write_directus_collections_meta {
  collection: String
  icon: String
  note: String
  display_template: String
  hidden: Boolean
  singleton: Boolean
  translations: JSON
  archive_field: String
  archive_app_filter: Boolean
  archive_value: String
  unarchive_value: String
  sort_field: String
  accountability: String
  color: String
  item_duplication_fields: JSON
  sort: Int
  group: String
  collapse: String
  preview_url: String
  versioning: Boolean
}

type write_directus_collections_schema {
  name: String
  comment: String
}

type write_directus_fields {
  collection: String
  field: String
  type: String
  meta: write_directus_fields_meta
  schema: write_directus_fields_schema
}

type write_directus_fields_meta {
  id: Int
  collection: String
  field: String
  special: [String]
  interface: String
  options: JSON
  display: String
  display_options: JSON
  readonly: Boolean
  hidden: Boolean
  sort: Int
  width: String
  translations: JSON
  note: String
  conditions: JSON
  required: Boolean
  group: String
  validation: JSON
  validation_message: String
}

type write_directus_fields_schema {
  name: String
  table: String
  data_type: String
  default_value: String
  max_length: Int
  numeric_precision: Int
  numeric_scale: Int
  is_generated: Boolean
  generation_expression: String
  is_indexed: Boolean
  is_nullable: Boolean
  is_unique: Boolean
  is_primary_key: Boolean
  has_auto_increment: Boolean
  foreign_key_column: String
  foreign_key_table: String
  comment: String
}

type write_directus_relations {
  collection: String
  field: String
  related_collection: String
  schema: write_directus_relations_schema
  meta: write_directus_relations_meta
}

type write_directus_relations_meta {
  id: Int
  many_collection: String
  many_field: String
  one_collection: String
  one_field: String
  one_collection_field: String
  one_allowed_collections: [String]
  junction_field: String
  sort_field: String
  one_deselect_action: String
}

type write_directus_relations_schema {
  table: String!
  column: String!
  foreign_key_table: String!
  foreign_key_column: String!
  constraint_name: String
  on_update: String!
  on_delete: String!
}

input attestations_directus_users_filter {
  attestations_id: attestations_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [attestations_directus_users_filter]
  _or: [attestations_directus_users_filter]
}

""""""
input attestations_directus_users_quantifier_filter {
  attestations_id: attestations_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [attestations_directus_users_filter]
  _or: [attestations_directus_users_filter]
  _some: attestations_directus_users_filter
  _none: attestations_directus_users_filter
}

input attestations_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  emoji: string_filter_operators
  id: id_filter_operators
  shape: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  to: attestations_directus_users_quantifier_filter
  to_func: count_function_filter_operators
  _and: [attestations_filter]
  _or: [attestations_filter]
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input contactInfos_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  heading: string_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [contactInfos_filter]
  _or: [contactInfos_filter]
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_directus_access_input {
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
  sort: Int
}

input create_directus_comments_input {
  id: ID
  collection: String!
  item: String!
  comment: String!
  date_created: Date
  date_updated: Date
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_dashboards_input {
  id: ID
  name: String!
  icon: String
  note: String
  date_created: Date
  user_created: create_directus_users_input
  color: String
  panels: [create_directus_panels_input]
}

input create_directus_files_input {
  id: ID
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder: create_directus_folders_input
  uploaded_by: create_directus_users_input
  created_on: Date
  modified_by: create_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input create_directus_flows_input {
  id: ID
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  operation: create_directus_operations_input
  date_created: Date
  user_created: create_directus_users_input
  operations: [create_directus_operations_input]
}

input create_directus_folders_input {
  id: ID
  name: String!
  parent: create_directus_folders_input
}

input create_directus_notifications_input {
  id: ID
  timestamp: Date
  status: String
  recipient: create_directus_users_input
  sender: create_directus_users_input
  subject: String!
  message: String
  collection: String
  item: String
}

input create_directus_operations_input {
  id: ID
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  resolve: create_directus_operations_input
  reject: create_directus_operations_input
  flow: create_directus_flows_input
  date_created: Date
  user_created: create_directus_users_input
}

input create_directus_panels_input {
  id: ID
  dashboard: create_directus_dashboards_input
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  date_created: Date
  user_created: create_directus_users_input
}

input create_directus_permissions_input {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  id: ID
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_presets_input {
  id: ID
  bookmark: String
  user: create_directus_users_input
  role: create_directus_roles_input
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_options: JSON
  refresh_interval: Int
  filter: JSON
  icon: String
  color: String
}

input create_directus_roles_input {
  id: ID
  name: String!
  icon: String
  description: String
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_shares_input {
  id: ID
  name: String
  collection: String!
  item: String!
  role: create_directus_roles_input

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created: create_directus_users_input
  date_created: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

input create_directus_translations_input {
  id: ID
  language: String!
  key: String!
  value: String!
}

input create_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: create_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: create_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  imported: Boolean
  wc_user: Boolean
  notifications: [create_layers_directus_users_1_input]
  policies: [create_directus_access_input]
}

input create_directus_versions_input {
  id: ID
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_updated: Date
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  delta: JSON
}

input create_directus_webhooks_input {
  id: ID
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  was_active_before_deprecation: Boolean!
  migrated_flow: create_directus_flows_input
}

input create_layers_directus_users_1_input {
  directus_users_id: create_directus_users_input
  id: ID
  layers_id: create_layers_input
}

input create_layers_input {
  id: ID
  index_plus_button: Boolean
  itemType: create_types_input
  item_presets: JSON
  listed: Boolean
  markerDefaultColor2: String
  markerIcon: create_marker_icons_input
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps: [create_layers_maps_input]
  notifications: [create_layers_directus_users_1_input]
}

input create_layers_maps_input {
  id: ID
  layers_id: create_layers_input
  maps_id: create_maps_input
}

input create_maps_input {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme: create_Themes_input

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  hide_signup: Boolean
  id: ID
  info_open: Boolean
  logo: create_directus_files_input
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean!
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers: [create_layers_maps_input]
}

input create_marker_icons_input {
  id: ID!
  image: create_directus_files_input
  image_outline: create_directus_files_input
  size: Float
  size_outline: Float
}

input create_Themes_input {
  theme: ID!
}

input create_types_input {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_updated: Date
  icon_as_labels: Boolean
  id: ID
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  profileTemplate: [create_types_profileTemplate_input]
}

input create_types_profileTemplate_input {
  collection: String
  id: ID
  item: String
  sort: Int
  types_id: create_types_input
}

input crowdfundings_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [crowdfundings_filter]
  _or: [crowdfundings_filter]
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input directus_access_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

""""""
input directus_access_quantifier_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
  _some: directus_access_filter
  _none: directus_access_filter
}

input directus_activity_filter {
  id: number_filter_operators
  action: string_filter_operators
  user: directus_users_filter
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  ip: string_filter_operators
  user_agent: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  origin: string_filter_operators
  revisions: directus_revisions_quantifier_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_comments_filter {
  id: id_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  comment: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [directus_comments_filter]
  _or: [directus_comments_filter]
}

input directus_dashboards_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_quantifier_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  id: id_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  tus_id: string_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  description: string_filter_operators
  status: string_filter_operators
  trigger: string_filter_operators
  accountability: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  operation: directus_operations_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  operations: directus_operations_quantifier_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  id: id_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_notifications_filter {
  id: number_filter_operators
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  status: string_filter_operators
  recipient: directus_users_filter
  sender: directus_users_filter
  subject: string_filter_operators
  message: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  _and: [directus_notifications_filter]
  _or: [directus_notifications_filter]
}

input directus_operations_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

""""""
input directus_operations_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
  _some: directus_operations_filter
  _none: directus_operations_filter
}

input directus_panels_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

""""""
input directus_panels_quantifier_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
  _some: directus_panels_filter
  _none: directus_panels_filter
}

input directus_permissions_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

""""""
input directus_permissions_quantifier_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
  _some: directus_permissions_filter
  _none: directus_permissions_filter
}

input directus_policies_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  permissions: directus_permissions_quantifier_filter
  permissions_func: count_function_filter_operators
  users: directus_access_quantifier_filter
  users_func: count_function_filter_operators
  roles: directus_access_quantifier_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_presets_filter {
  id: number_filter_operators
  bookmark: string_filter_operators
  user: directus_users_filter
  role: directus_roles_filter
  collection: string_filter_operators
  search: string_filter_operators
  layout: string_filter_operators
  layout_query: string_filter_operators
  layout_query_func: count_function_filter_operators
  layout_options: string_filter_operators
  layout_options_func: count_function_filter_operators
  refresh_interval: number_filter_operators
  filter: string_filter_operators
  filter_func: count_function_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  _and: [directus_presets_filter]
  _or: [directus_presets_filter]
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

""""""
input directus_revisions_quantifier_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
  _some: directus_revisions_filter
  _none: directus_revisions_filter
}

input directus_roles_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

""""""
input directus_roles_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
  _some: directus_roles_filter
  _none: directus_roles_filter
}

input directus_shares_filter {
  id: id_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  role: directus_roles_filter
  password: hash_filter_operators
  user_created: directus_users_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_start: date_filter_operators
  date_start_func: datetime_function_filter_operators
  date_end: date_filter_operators
  date_end_func: datetime_function_filter_operators
  times_used: number_filter_operators
  max_uses: number_filter_operators
  _and: [directus_shares_filter]
  _or: [directus_shares_filter]
}

input directus_translations_filter {
  id: id_filter_operators
  language: string_filter_operators
  key: string_filter_operators
  value: string_filter_operators
  _and: [directus_translations_filter]
  _or: [directus_translations_filter]
}

input directus_users_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  imported: boolean_filter_operators
  wc_user: boolean_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

""""""
input directus_users_quantifier_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  imported: boolean_filter_operators
  wc_user: boolean_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
  _some: directus_users_filter
  _none: directus_users_filter
}

input directus_versions_filter {
  id: id_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  hash: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input directus_webhooks_filter {
  id: number_filter_operators
  name: string_filter_operators
  method: string_filter_operators
  url: string_filter_operators
  status: string_filter_operators
  data: boolean_filter_operators
  actions: string_filter_operators
  collections: string_filter_operators
  headers: string_filter_operators
  headers_func: count_function_filter_operators
  was_active_before_deprecation: boolean_filter_operators
  migrated_flow: directus_flows_filter
  _and: [directus_webhooks_filter]
  _or: [directus_webhooks_filter]
}

input gallery_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  hideInputLabel: boolean_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [gallery_filter]
  _or: [gallery_filter]
}

input geometry_filter_operators {
  _eq: GraphQLGeoJSON
  _neq: GraphQLGeoJSON
  _intersects: GraphQLGeoJSON
  _nintersects: GraphQLGeoJSON
  _intersects_bbox: GraphQLGeoJSON
  _nintersects_bbox: GraphQLGeoJSON
  _null: Boolean
  _nnull: Boolean
}

input groupSubheaders_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  groupStates: string_filter_operators
  groupStates_func: count_function_filter_operators
  id: id_filter_operators
  platforms: string_filter_operators
  platforms_func: count_function_filter_operators
  shareBaseUrl: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  groupTypes: groupSubheaders_groupTypes_quantifier_filter
  groupTypes_func: count_function_filter_operators
  _and: [groupSubheaders_filter]
  _or: [groupSubheaders_filter]
}

input groupSubheaders_groupTypes_filter {
  groupSubheaders_id: groupSubheaders_filter
  groupTypes_id: groupTypes_filter
  id: number_filter_operators
  _and: [groupSubheaders_groupTypes_filter]
  _or: [groupSubheaders_groupTypes_filter]
}

""""""
input groupSubheaders_groupTypes_quantifier_filter {
  groupSubheaders_id: groupSubheaders_filter
  groupTypes_id: groupTypes_filter
  id: number_filter_operators
  _and: [groupSubheaders_groupTypes_filter]
  _or: [groupSubheaders_groupTypes_filter]
  _some: groupSubheaders_groupTypes_filter
  _none: groupSubheaders_groupTypes_filter
}

input groupTypes_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  image: directus_files_filter
  markerIcon: marker_icons_filter
  name: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [groupTypes_filter]
  _or: [groupTypes_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input id_filter_operators {
  _eq: ID
  _neq: ID
  _contains: ID
  _icontains: ID
  _ncontains: ID
  _starts_with: ID
  _nstarts_with: ID
  _istarts_with: ID
  _nistarts_with: ID
  _ends_with: ID
  _nends_with: ID
  _iends_with: ID
  _niends_with: ID
  _in: [ID]
  _nin: [ID]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input inviteLinks_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [inviteLinks_filter]
  _or: [inviteLinks_filter]
}

input items_files_filter {
  directus_files_id: directus_files_filter
  id: number_filter_operators
  items_id: items_filter
  _and: [items_files_filter]
  _or: [items_files_filter]
}

""""""
input items_files_quantifier_filter {
  directus_files_id: directus_files_filter
  id: number_filter_operators
  items_id: items_filter
  _and: [items_files_filter]
  _or: [items_files_filter]
  _some: items_files_filter
  _none: items_files_filter
}

input items_filter {
  color: string_filter_operators
  contact: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  draft: boolean_filter_operators
  end: date_filter_operators
  end_func: datetime_function_filter_operators
  extended: string_filter_operators
  extended_func: count_function_filter_operators
  group_type: string_filter_operators
  id: id_filter_operators
  image: directus_files_filter
  image_external: string_filter_operators
  layer: layers_filter
  markerIcon: marker_icons_filter
  name: string_filter_operators
  next_appointment: string_filter_operators
  openCollectiveSlug: string_filter_operators
  parent: items_filter
  position: geometry_filter_operators
  public_edit: boolean_filter_operators
  slug: string_filter_operators
  start: date_filter_operators
  start_func: datetime_function_filter_operators
  status: string_filter_operators
  subname: string_filter_operators
  telephone: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  gallery: items_files_quantifier_filter
  gallery_func: count_function_filter_operators
  needs: items_tags_1_quantifier_filter
  needs_func: count_function_filter_operators
  offers: items_tags_quantifier_filter
  offers_func: count_function_filter_operators
  relations: items_items_quantifier_filter
  relations_func: count_function_filter_operators
  secrets: itemSecrets_quantifier_filter
  secrets_func: count_function_filter_operators
  _and: [items_filter]
  _or: [items_filter]
}

input items_items_filter {
  id: number_filter_operators
  items_id: items_filter
  related_items_id: items_filter
  type: string_filter_operators
  _and: [items_items_filter]
  _or: [items_items_filter]
}

""""""
input items_items_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  related_items_id: items_filter
  type: string_filter_operators
  _and: [items_items_filter]
  _or: [items_items_filter]
  _some: items_items_filter
  _none: items_items_filter
}

input items_tags_1_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_1_filter]
  _or: [items_tags_1_filter]
}

""""""
input items_tags_1_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_1_filter]
  _or: [items_tags_1_filter]
  _some: items_tags_1_filter
  _none: items_tags_1_filter
}

input items_tags_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_filter]
  _or: [items_tags_filter]
}

""""""
input items_tags_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_filter]
  _or: [items_tags_filter]
  _some: items_tags_filter
  _none: items_tags_filter
}

input itemSecrets_filter {
  item: items_filter
  secret: id_filter_operators
  _and: [itemSecrets_filter]
  _or: [itemSecrets_filter]
}

""""""
input itemSecrets_quantifier_filter {
  item: items_filter
  secret: id_filter_operators
  _and: [itemSecrets_filter]
  _or: [itemSecrets_filter]
  _some: itemSecrets_filter
  _none: itemSecrets_filter
}

input layers_directus_users_1_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  layers_id: layers_filter
  _and: [layers_directus_users_1_filter]
  _or: [layers_directus_users_1_filter]
}

""""""
input layers_directus_users_1_quantifier_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  layers_id: layers_filter
  _and: [layers_directus_users_1_filter]
  _or: [layers_directus_users_1_filter]
  _some: layers_directus_users_1_filter
  _none: layers_directus_users_1_filter
}

input layers_filter {
  id: id_filter_operators
  index_plus_button: boolean_filter_operators
  itemType: types_filter
  item_presets: string_filter_operators
  item_presets_func: count_function_filter_operators
  listed: boolean_filter_operators
  markerDefaultColor2: string_filter_operators
  markerIcon: marker_icons_filter
  markerShape: string_filter_operators
  menuColor: string_filter_operators
  menuText: string_filter_operators
  name: string_filter_operators
  onlyOnePerOwner: boolean_filter_operators
  public_edit_items: boolean_filter_operators
  sort: number_filter_operators
  userProfileLayer: boolean_filter_operators
  maps: layers_maps_quantifier_filter
  maps_func: count_function_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  _and: [layers_filter]
  _or: [layers_filter]
}

input layers_maps_filter {
  id: number_filter_operators
  layers_id: layers_filter
  maps_id: maps_filter
  _and: [layers_maps_filter]
  _or: [layers_maps_filter]
}

""""""
input layers_maps_quantifier_filter {
  id: number_filter_operators
  layers_id: layers_filter
  maps_id: maps_filter
  _and: [layers_maps_filter]
  _or: [layers_maps_filter]
  _some: layers_maps_filter
  _none: layers_maps_filter
}

input maps_filter {
  center: geometry_filter_operators
  custom_text: string_filter_operators
  default_theme: Themes_filter
  donation_widget: boolean_filter_operators
  expand_layer_control: boolean_filter_operators
  geo: string_filter_operators
  geo_func: count_function_filter_operators
  hide_signup: boolean_filter_operators
  id: id_filter_operators
  info_open: boolean_filter_operators
  logo: directus_files_filter
  name: string_filter_operators
  own_tag_space: boolean_filter_operators
  show_filter_control: boolean_filter_operators
  show_gratitude_control: boolean_filter_operators
  show_layer_control: boolean_filter_operators
  show_request_password: boolean_filter_operators
  show_theme_control: boolean_filter_operators
  show_zoom_control: boolean_filter_operators
  tile_server_attribution: string_filter_operators
  tile_server_url: string_filter_operators
  url: string_filter_operators
  zoom: number_filter_operators
  layers: layers_maps_quantifier_filter
  layers_func: count_function_filter_operators
  _and: [maps_filter]
  _or: [maps_filter]
}

input marker_icons_filter {
  id: string_filter_operators
  image: directus_files_filter
  image_outline: directus_files_filter
  size: number_filter_operators
  size_outline: number_filter_operators
  _and: [marker_icons_filter]
  _or: [marker_icons_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input relations_filter {
  direction: string_filter_operators
  heading: string_filter_operators
  hideWhenEmpty: boolean_filter_operators
  id: number_filter_operators
  relation: string_filter_operators
  _and: [relations_filter]
  _or: [relations_filter]
}

input startEnd_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [startEnd_filter]
  _or: [startEnd_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input tags_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: id_filter_operators
  map: maps_filter
  name: string_filter_operators
  offer_or_need: boolean_filter_operators
  user_created: id_filter_operators
  _and: [tags_filter]
  _or: [tags_filter]
}

input texts_filter {
  dataField: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  heading: string_filter_operators
  hideWhenEmpty: boolean_filter_operators
  id: id_filter_operators
  showMarkdownHint: boolean_filter_operators
  size: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [texts_filter]
  _or: [texts_filter]
}

input Themes_filter {
  theme: string_filter_operators
  _and: [Themes_filter]
  _or: [Themes_filter]
}

input types_filter {
  button_label: string_filter_operators
  custom_profile_url: string_filter_operators
  custom_text: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  icon_as_labels: boolean_filter_operators
  id: id_filter_operators
  name: string_filter_operators
  offers_and_needs: boolean_filter_operators
  questlog: boolean_filter_operators
  relations: boolean_filter_operators
  show_header_view_in_form: boolean_filter_operators
  show_name: boolean_filter_operators
  show_name_input: boolean_filter_operators
  show_profile_button: boolean_filter_operators
  show_start_end: boolean_filter_operators
  show_start_end_input: boolean_filter_operators
  show_text: boolean_filter_operators
  show_text_input: boolean_filter_operators
  small_form_edit: boolean_filter_operators
  template: string_filter_operators
  text: boolean_filter_operators
  text_input_label: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  profileTemplate: types_profileTemplate_quantifier_filter
  profileTemplate_func: count_function_filter_operators
  _and: [types_filter]
  _or: [types_filter]
}

input types_profileTemplate_filter {
  collection: string_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  types_id: types_filter
  _and: [types_profileTemplate_filter]
  _or: [types_profileTemplate_filter]
  item__groupSubheaders: groupSubheaders_filter
  item__contactInfos: contactInfos_filter
  item__texts: texts_filter
  item__startEnd: startEnd_filter
  item__gallery: gallery_filter
  item__crowdfundings: crowdfundings_filter
  item__inviteLinks: inviteLinks_filter
  item__relations: relations_filter
}

""""""
input types_profileTemplate_quantifier_filter {
  collection: string_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  types_id: types_filter
  _and: [types_profileTemplate_filter]
  _or: [types_profileTemplate_filter]
  _some: types_profileTemplate_filter
  _none: types_profileTemplate_filter
  item__groupSubheaders: groupSubheaders_filter
  item__contactInfos: contactInfos_filter
  item__texts: texts_filter
  item__startEnd: startEnd_filter
  item__gallery: gallery_filter
  item__crowdfundings: crowdfundings_filter
  item__inviteLinks: inviteLinks_filter
  item__relations: relations_filter
}

input update_directus_access_input {
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
  sort: Int
}

input update_directus_comments_input {
  id: ID
  collection: String
  item: String
  comment: String
  date_created: Date
  date_updated: Date
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_dashboards_input {
  id: ID
  name: String
  icon: String
  note: String
  date_created: Date
  user_created: update_directus_users_input
  color: String
  panels: [update_directus_panels_input]
}

input update_directus_extensions_input_metaInput {
  enabled: Boolean
}

input update_directus_extensions_inputInput {
  meta: update_directus_extensions_input_metaInput
}

input update_directus_files_input {
  id: ID
  storage: String
  filename_disk: String
  filename_download: String
  title: String
  type: String
  folder: update_directus_folders_input
  uploaded_by: update_directus_users_input
  created_on: Date
  modified_by: update_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input update_directus_flows_input {
  id: ID
  name: String
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  operation: update_directus_operations_input
  date_created: Date
  user_created: update_directus_users_input
  operations: [update_directus_operations_input]
}

input update_directus_folders_input {
  id: ID
  name: String
  parent: update_directus_folders_input
}

input update_directus_notifications_input {
  id: ID
  timestamp: Date
  status: String
  recipient: update_directus_users_input
  sender: update_directus_users_input
  subject: String
  message: String
  collection: String
  item: String
}

input update_directus_operations_input {
  id: ID
  name: String
  key: String
  type: String
  position_x: Int
  position_y: Int
  options: JSON
  resolve: update_directus_operations_input
  reject: update_directus_operations_input
  flow: update_directus_flows_input
  date_created: Date
  user_created: update_directus_users_input
}

input update_directus_panels_input {
  id: ID
  dashboard: update_directus_dashboards_input
  name: String
  icon: String
  color: String
  show_header: Boolean
  note: String
  type: String
  position_x: Int
  position_y: Int
  width: Int
  height: Int
  options: JSON
  date_created: Date
  user_created: update_directus_users_input
}

input update_directus_permissions_input {
  id: ID
  collection: String
  action: String
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  id: ID
  name: String
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  admin_access: Boolean
  app_access: Boolean
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_presets_input {
  id: ID
  bookmark: String
  user: update_directus_users_input
  role: update_directus_roles_input
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_options: JSON
  refresh_interval: Int
  filter: JSON
  icon: String
  color: String
}

input update_directus_roles_input {
  id: ID
  name: String
  icon: String
  description: String
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_settings_input {
  id: ID
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo: update_directus_files_input
  public_foreground: update_directus_files_input
  public_background: update_directus_files_input
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  custom_css: String
  storage_default_folder: update_directus_folders_input
  basemaps: JSON
  mapbox_key: String
  module_bar: JSON
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  public_favicon: update_directus_files_input
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  default_theme_dark: String
  theme_dark_overrides: JSON
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role: update_directus_roles_input

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  visual_editor_urls: JSON
}

input update_directus_shares_input {
  id: ID
  name: String
  collection: String
  item: String
  role: update_directus_roles_input

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created: update_directus_users_input
  date_created: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

input update_directus_translations_input {
  id: ID
  language: String
  key: String
  value: String
}

input update_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: update_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: update_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  imported: Boolean
  wc_user: Boolean
  notifications: [update_layers_directus_users_1_input]
  policies: [update_directus_access_input]
}

input update_directus_versions_input {
  id: ID
  key: String
  name: String
  collection: String
  item: String
  hash: String
  date_created: Date
  date_updated: Date
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  delta: JSON
}

input update_directus_webhooks_input {
  id: ID
  name: String
  method: String
  url: String
  status: String
  data: Boolean
  actions: [String]
  collections: [String]
  headers: JSON
  was_active_before_deprecation: Boolean
  migrated_flow: update_directus_flows_input
}

input update_layers_directus_users_1_input {
  directus_users_id: update_directus_users_input
  id: ID
  layers_id: update_layers_input
}

input update_layers_input {
  id: ID
  index_plus_button: Boolean
  itemType: update_types_input
  item_presets: JSON
  listed: Boolean
  markerDefaultColor2: String
  markerIcon: update_marker_icons_input
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps: [update_layers_maps_input]
  notifications: [update_layers_directus_users_1_input]
}

input update_layers_maps_input {
  id: ID
  layers_id: update_layers_input
  maps_id: update_maps_input
}

input update_maps_input {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme: update_Themes_input

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  hide_signup: Boolean
  id: ID
  info_open: Boolean
  logo: update_directus_files_input
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers: [update_layers_maps_input]
}

input update_marker_icons_input {
  id: ID
  image: update_directus_files_input
  image_outline: update_directus_files_input
  size: Float
  size_outline: Float
}

input update_Themes_input {
  theme: ID
}

input update_types_input {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_updated: Date
  icon_as_labels: Boolean
  id: ID
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  profileTemplate: [update_types_profileTemplate_input]
}

input update_types_profileTemplate_input {
  collection: String
  id: ID
  item: String
  sort: Int
  types_id: update_types_input
}

input write_directus_collections_input {
  meta: write_directus_collections_meta_input
  fields: [write_directus_fields_input!]
}

input write_directus_collections_meta_input {
  collection: String
  icon: String
  note: String
  display_template: String
  hidden: Boolean
  singleton: Boolean
  translations: JSON
  archive_field: String
  archive_app_filter: Boolean
  archive_value: String
  unarchive_value: String
  sort_field: String
  accountability: String
  color: String
  item_duplication_fields: JSON
  sort: Int
  group: String
  collapse: String
  preview_url: String
  versioning: Boolean
}

input write_directus_fields_input {
  collection: String
  field: String
  type: String
  meta: write_directus_fields_meta_input
  schema: write_directus_fields_schema_input
}

input write_directus_fields_meta_input {
  id: Int
  collection: String
  field: String
  special: [String]
  interface: String
  options: JSON
  display: String
  display_options: JSON
  readonly: Boolean
  hidden: Boolean
  sort: Int
  width: String
  translations: JSON
  note: String
  conditions: JSON
  required: Boolean
  group: String
  validation: JSON
  validation_message: String
}

input write_directus_fields_schema_input {
  name: String
  table: String
  data_type: String
  default_value: String
  max_length: Int
  numeric_precision: Int
  numeric_scale: Int
  is_generated: Boolean
  generation_expression: String
  is_indexed: Boolean
  is_nullable: Boolean
  is_unique: Boolean
  is_primary_key: Boolean
  has_auto_increment: Boolean
  foreign_key_column: String
  foreign_key_table: String
  comment: String
}

input write_directus_relations_input {
  collection: String
  field: String
  related_collection: String
  schema: write_directus_relations_schema_input
  meta: write_directus_relations_meta_input
}

input write_directus_relations_meta_input {
  id: Int
  many_collection: String
  many_field: String
  one_collection: String
  one_field: String
  one_collection_field: String
  one_allowed_collections: [String]
  junction_field: String
  sort_field: String
  one_deselect_action: String
}

input write_directus_relations_schema_input {
  table: String!
  column: String!
  foreign_key_table: String!
  foreign_key_column: String!
  constraint_name: String
  on_update: String!
  on_delete: String!
}