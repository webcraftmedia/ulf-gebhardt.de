type Query {
  directus_sync_id_map(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_sync_id_map!]!
  directus_sync_id_map_by_id(id: ID!, version: String): directus_sync_id_map
  directus_sync_id_map_aggregated(groupBy: [String], filter: directus_sync_id_map_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [directus_sync_id_map_aggregated!]!
  directus_sync_id_map_by_version(version: String!, id: ID!): version_directus_sync_id_map
  relations(filter: relations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [relations!]!
  relations_by_id(id: ID!, version: String): relations
  relations_aggregated(groupBy: [String], filter: relations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [relations_aggregated!]!
  relations_by_version(version: String!, id: ID!): version_relations
  attestations(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [attestations!]!
  attestations_by_id(id: ID!, version: String): attestations
  attestations_aggregated(groupBy: [String], filter: attestations_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [attestations_aggregated!]!
  attestations_by_version(version: String!, id: ID!): version_attestations
  attestations_directus_users(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [attestations_directus_users!]!
  attestations_directus_users_by_id(id: ID!, version: String): attestations_directus_users
  attestations_directus_users_aggregated(groupBy: [String], filter: attestations_directus_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [attestations_directus_users_aggregated!]!
  attestations_directus_users_by_version(version: String!, id: ID!): version_attestations_directus_users
  contactInfos(filter: contactInfos_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [contactInfos!]!
  contactInfos_by_id(id: ID!, version: String): contactInfos
  contactInfos_aggregated(groupBy: [String], filter: contactInfos_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [contactInfos_aggregated!]!
  contactInfos_by_version(version: String!, id: ID!): version_contactInfos
  crowdfundings(filter: crowdfundings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [crowdfundings!]!
  crowdfundings_by_id(id: ID!, version: String): crowdfundings
  crowdfundings_aggregated(groupBy: [String], filter: crowdfundings_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [crowdfundings_aggregated!]!
  crowdfundings_by_version(version: String!, id: ID!): version_crowdfundings
  features(filter: features_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [features!]!
  features_by_id(id: ID!, version: String): features
  features_aggregated(groupBy: [String], filter: features_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [features_aggregated!]!
  features_by_version(version: String!, id: ID!): version_features
  gallery(filter: gallery_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [gallery!]!
  gallery_by_id(id: ID!, version: String): gallery
  gallery_aggregated(groupBy: [String], filter: gallery_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [gallery_aggregated!]!
  gallery_by_version(version: String!, id: ID!): version_gallery
  groupSubheaders(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [groupSubheaders!]!
  groupSubheaders_by_id(id: ID!, version: String): groupSubheaders
  groupSubheaders_aggregated(groupBy: [String], filter: groupSubheaders_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [groupSubheaders_aggregated!]!
  groupSubheaders_by_version(version: String!, id: ID!): version_groupSubheaders
  groupSubheaders_groupTypes(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [groupSubheaders_groupTypes!]!
  groupSubheaders_groupTypes_by_id(id: ID!, version: String): groupSubheaders_groupTypes
  groupSubheaders_groupTypes_aggregated(groupBy: [String], filter: groupSubheaders_groupTypes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [groupSubheaders_groupTypes_aggregated!]!
  groupSubheaders_groupTypes_by_version(version: String!, id: ID!): version_groupSubheaders_groupTypes
  groupTypes(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [groupTypes!]!
  groupTypes_by_id(id: ID!, version: String): groupTypes
  groupTypes_aggregated(groupBy: [String], filter: groupTypes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [groupTypes_aggregated!]!
  groupTypes_by_version(version: String!, id: ID!): version_groupTypes
  marker_icons(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [marker_icons!]!
  marker_icons_by_id(id: ID!, version: String): marker_icons
  marker_icons_aggregated(groupBy: [String], filter: marker_icons_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [marker_icons_aggregated!]!
  marker_icons_by_version(version: String!, id: ID!): version_marker_icons
  inviteLinks(filter: inviteLinks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [inviteLinks!]!
  inviteLinks_by_id(id: ID!, version: String): inviteLinks
  inviteLinks_aggregated(groupBy: [String], filter: inviteLinks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [inviteLinks_aggregated!]!
  inviteLinks_by_version(version: String!, id: ID!): version_inviteLinks
  items(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items!]!
  items_by_id(id: ID!, version: String): items
  items_aggregated(groupBy: [String], filter: items_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [items_aggregated!]!
  items_by_version(version: String!, id: ID!): version_items
  itemSecrets(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [itemSecrets!]!
  itemSecrets_by_id(id: ID!, version: String): itemSecrets
  itemSecrets_aggregated(groupBy: [String], filter: itemSecrets_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [itemSecrets_aggregated!]!
  itemSecrets_by_version(version: String!, id: ID!): version_itemSecrets
  layers(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers!]!
  layers_by_id(id: ID!, version: String): layers
  layers_aggregated(groupBy: [String], filter: layers_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [layers_aggregated!]!
  layers_by_version(version: String!, id: ID!): version_layers
  items_files(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_files!]!
  items_files_by_id(id: ID!, version: String): items_files
  items_files_aggregated(groupBy: [String], filter: items_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [items_files_aggregated!]!
  items_files_by_version(version: String!, id: ID!): version_items_files
  items_items(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_items!]!
  items_items_by_id(id: ID!, version: String): items_items
  items_items_aggregated(groupBy: [String], filter: items_items_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [items_items_aggregated!]!
  items_items_by_version(version: String!, id: ID!): version_items_items
  items_tags(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags!]!
  items_tags_by_id(id: ID!, version: String): items_tags
  items_tags_aggregated(groupBy: [String], filter: items_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [items_tags_aggregated!]!
  items_tags_by_version(version: String!, id: ID!): version_items_tags
  tags(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [tags!]!
  tags_by_id(id: ID!, version: String): tags
  tags_aggregated(groupBy: [String], filter: tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [tags_aggregated!]!
  tags_by_version(version: String!, id: ID!): version_tags
  items_tags_1(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags_1!]!
  items_tags_1_by_id(id: ID!, version: String): items_tags_1
  items_tags_1_aggregated(groupBy: [String], filter: items_tags_1_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [items_tags_1_aggregated!]!
  items_tags_1_by_version(version: String!, id: ID!): version_items_tags_1
  junction_directus_users_tags(filter: junction_directus_users_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [junction_directus_users_tags!]!
  junction_directus_users_tags_by_id(id: ID!, version: String): junction_directus_users_tags
  junction_directus_users_tags_aggregated(groupBy: [String], filter: junction_directus_users_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [junction_directus_users_tags_aggregated!]!
  junction_directus_users_tags_by_version(version: String!, id: ID!): version_junction_directus_users_tags
  junction_directus_users_tags_1(filter: junction_directus_users_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [junction_directus_users_tags_1!]!
  junction_directus_users_tags_1_by_id(id: ID!, version: String): junction_directus_users_tags_1
  junction_directus_users_tags_1_aggregated(groupBy: [String], filter: junction_directus_users_tags_1_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [junction_directus_users_tags_1_aggregated!]!
  junction_directus_users_tags_1_by_version(version: String!, id: ID!): version_junction_directus_users_tags_1
  types(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [types!]!
  types_by_id(id: ID!, version: String): types
  types_aggregated(groupBy: [String], filter: types_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [types_aggregated!]!
  types_by_version(version: String!, id: ID!): version_types
  layers_directus_users_1(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_directus_users_1!]!
  layers_directus_users_1_by_id(id: ID!, version: String): layers_directus_users_1
  layers_directus_users_1_aggregated(groupBy: [String], filter: layers_directus_users_1_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [layers_directus_users_1_aggregated!]!
  layers_directus_users_1_by_version(version: String!, id: ID!): version_layers_directus_users_1
  layers_files(filter: layers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_files!]!
  layers_files_by_id(id: ID!, version: String): layers_files
  layers_files_aggregated(groupBy: [String], filter: layers_files_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [layers_files_aggregated!]!
  layers_files_by_version(version: String!, id: ID!): version_layers_files
  layers_maps(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_maps!]!
  layers_maps_by_id(id: ID!, version: String): layers_maps
  layers_maps_aggregated(groupBy: [String], filter: layers_maps_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [layers_maps_aggregated!]!
  layers_maps_by_version(version: String!, id: ID!): version_layers_maps
  maps(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [maps!]!
  maps_by_id(id: ID!, version: String): maps
  maps_aggregated(groupBy: [String], filter: maps_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [maps_aggregated!]!
  maps_by_version(version: String!, id: ID!): version_maps
  Themes(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [Themes!]!
  Themes_by_id(id: ID!, version: String): Themes
  Themes_aggregated(groupBy: [String], filter: Themes_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [Themes_aggregated!]!
  Themes_by_version(version: String!, id: ID!): version_Themes
  startEnd(filter: startEnd_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [startEnd!]!
  startEnd_by_id(id: ID!, version: String): startEnd
  startEnd_aggregated(groupBy: [String], filter: startEnd_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [startEnd_aggregated!]!
  startEnd_by_version(version: String!, id: ID!): version_startEnd
  team(filter: team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [team!]!
  team_by_id(id: ID!, version: String): team
  team_aggregated(groupBy: [String], filter: team_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [team_aggregated!]!
  team_by_version(version: String!, id: ID!): version_team
  texts(filter: texts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [texts!]!
  texts_by_id(id: ID!, version: String): texts
  texts_aggregated(groupBy: [String], filter: texts_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [texts_aggregated!]!
  texts_by_version(version: String!, id: ID!): version_texts
  types_profileTemplate(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [types_profileTemplate!]!
  types_profileTemplate_by_id(id: ID!, version: String): types_profileTemplate
  types_profileTemplate_aggregated(groupBy: [String], filter: types_profileTemplate_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [types_profileTemplate_aggregated!]!
  types_profileTemplate_by_version(version: String!, id: ID!): version_types_profileTemplate
}

type Mutation {
  create_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  create_directus_sync_id_map_item(data: create_directus_sync_id_map_input!): directus_sync_id_map
  create_relations_items(filter: relations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_relations_input!]): [relations!]!
  create_relations_item(data: create_relations_input!): relations
  create_attestations_items(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_attestations_input!]): [attestations!]!
  create_attestations_item(data: create_attestations_input!): attestations
  create_attestations_directus_users_items(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_attestations_directus_users_input!]): [attestations_directus_users!]!
  create_attestations_directus_users_item(data: create_attestations_directus_users_input!): attestations_directus_users
  create_contactInfos_items(filter: contactInfos_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_contactInfos_input!]): [contactInfos!]!
  create_contactInfos_item(data: create_contactInfos_input!): contactInfos
  create_crowdfundings_items(filter: crowdfundings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_crowdfundings_input!]): [crowdfundings!]!
  create_crowdfundings_item(data: create_crowdfundings_input!): crowdfundings
  create_features_items(filter: features_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_features_input!]): [features!]!
  create_features_item(data: create_features_input!): features
  create_gallery_items(filter: gallery_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_gallery_input!]): [gallery!]!
  create_gallery_item(data: create_gallery_input!): gallery
  create_groupSubheaders_items(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_groupSubheaders_input!]): [groupSubheaders!]!
  create_groupSubheaders_item(data: create_groupSubheaders_input!): groupSubheaders
  create_groupSubheaders_groupTypes_items(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_groupSubheaders_groupTypes_input!]): [groupSubheaders_groupTypes!]!
  create_groupSubheaders_groupTypes_item(data: create_groupSubheaders_groupTypes_input!): groupSubheaders_groupTypes
  create_groupTypes_items(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_groupTypes_input!]): [groupTypes!]!
  create_groupTypes_item(data: create_groupTypes_input!): groupTypes
  create_marker_icons_items(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_marker_icons_input!]): [marker_icons!]!
  create_marker_icons_item(data: create_marker_icons_input!): marker_icons
  create_inviteLinks_items(filter: inviteLinks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_inviteLinks_input!]): [inviteLinks!]!
  create_inviteLinks_item(data: create_inviteLinks_input!): inviteLinks
  create_items_items(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_items_input!]): [items!]!
  create_items_item(data: create_items_input!): items
  create_itemSecrets_items(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_itemSecrets_input!]): [itemSecrets!]!
  create_itemSecrets_item(data: create_itemSecrets_input!): itemSecrets
  create_layers_items(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_layers_input!]): [layers!]!
  create_layers_item(data: create_layers_input!): layers
  create_items_files_items(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_items_files_input!]): [items_files!]!
  create_items_files_item(data: create_items_files_input!): items_files
  create_items_items_items(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_items_items_input!]): [items_items!]!
  create_items_items_item(data: create_items_items_input!): items_items
  create_items_tags_items(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_items_tags_input!]): [items_tags!]!
  create_items_tags_item(data: create_items_tags_input!): items_tags
  create_tags_items(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_tags_input!]): [tags!]!
  create_tags_item(data: create_tags_input!): tags
  create_items_tags_1_items(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_items_tags_1_input!]): [items_tags_1!]!
  create_items_tags_1_item(data: create_items_tags_1_input!): items_tags_1
  create_junction_directus_users_tags_items(filter: junction_directus_users_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_junction_directus_users_tags_input!]): [junction_directus_users_tags!]!
  create_junction_directus_users_tags_item(data: create_junction_directus_users_tags_input!): junction_directus_users_tags
  create_junction_directus_users_tags_1_items(filter: junction_directus_users_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_junction_directus_users_tags_1_input!]): [junction_directus_users_tags_1!]!
  create_junction_directus_users_tags_1_item(data: create_junction_directus_users_tags_1_input!): junction_directus_users_tags_1
  create_types_items(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_types_input!]): [types!]!
  create_types_item(data: create_types_input!): types
  create_layers_directus_users_1_items(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_layers_directus_users_1_input!]): [layers_directus_users_1!]!
  create_layers_directus_users_1_item(data: create_layers_directus_users_1_input!): layers_directus_users_1
  create_layers_files_items(filter: layers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_layers_files_input!]): [layers_files!]!
  create_layers_files_item(data: create_layers_files_input!): layers_files
  create_layers_maps_items(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_layers_maps_input!]): [layers_maps!]!
  create_layers_maps_item(data: create_layers_maps_input!): layers_maps
  create_maps_items(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_maps_input!]): [maps!]!
  create_maps_item(data: create_maps_input!): maps
  create_Themes_items(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_Themes_input!]): [Themes!]!
  create_Themes_item(data: create_Themes_input!): Themes
  create_startEnd_items(filter: startEnd_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_startEnd_input!]): [startEnd!]!
  create_startEnd_item(data: create_startEnd_input!): startEnd
  create_team_items(filter: team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_team_input!]): [team!]!
  create_team_item(data: create_team_input!): team
  create_texts_items(filter: texts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_texts_input!]): [texts!]!
  create_texts_item(data: create_texts_input!): texts
  create_types_profileTemplate_items(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_types_profileTemplate_input!]): [types_profileTemplate!]!
  create_types_profileTemplate_item(data: create_types_profileTemplate_input!): types_profileTemplate
  update_directus_sync_id_map_items(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_directus_sync_id_map_input!): [directus_sync_id_map!]!
  update_directus_sync_id_map_batch(filter: directus_sync_id_map_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_directus_sync_id_map_input!]): [directus_sync_id_map!]!
  update_directus_sync_id_map_item(id: ID!, data: update_directus_sync_id_map_input!): directus_sync_id_map
  update_relations_items(filter: relations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_relations_input!): [relations!]!
  update_relations_batch(filter: relations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_relations_input!]): [relations!]!
  update_relations_item(id: ID!, data: update_relations_input!): relations
  update_attestations_items(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_attestations_input!): [attestations!]!
  update_attestations_batch(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_attestations_input!]): [attestations!]!
  update_attestations_item(id: ID!, data: update_attestations_input!): attestations
  update_attestations_directus_users_items(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_attestations_directus_users_input!): [attestations_directus_users!]!
  update_attestations_directus_users_batch(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_attestations_directus_users_input!]): [attestations_directus_users!]!
  update_attestations_directus_users_item(id: ID!, data: update_attestations_directus_users_input!): attestations_directus_users
  update_contactInfos_items(filter: contactInfos_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_contactInfos_input!): [contactInfos!]!
  update_contactInfos_batch(filter: contactInfos_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_contactInfos_input!]): [contactInfos!]!
  update_contactInfos_item(id: ID!, data: update_contactInfos_input!): contactInfos
  update_crowdfundings_items(filter: crowdfundings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_crowdfundings_input!): [crowdfundings!]!
  update_crowdfundings_batch(filter: crowdfundings_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_crowdfundings_input!]): [crowdfundings!]!
  update_crowdfundings_item(id: ID!, data: update_crowdfundings_input!): crowdfundings
  update_features_items(filter: features_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_features_input!): [features!]!
  update_features_batch(filter: features_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_features_input!]): [features!]!
  update_features_item(id: ID!, data: update_features_input!): features
  update_gallery_items(filter: gallery_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_gallery_input!): [gallery!]!
  update_gallery_batch(filter: gallery_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_gallery_input!]): [gallery!]!
  update_gallery_item(id: ID!, data: update_gallery_input!): gallery
  update_groupSubheaders_items(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_groupSubheaders_input!): [groupSubheaders!]!
  update_groupSubheaders_batch(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_groupSubheaders_input!]): [groupSubheaders!]!
  update_groupSubheaders_item(id: ID!, data: update_groupSubheaders_input!): groupSubheaders
  update_groupSubheaders_groupTypes_items(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_groupSubheaders_groupTypes_input!): [groupSubheaders_groupTypes!]!
  update_groupSubheaders_groupTypes_batch(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_groupSubheaders_groupTypes_input!]): [groupSubheaders_groupTypes!]!
  update_groupSubheaders_groupTypes_item(id: ID!, data: update_groupSubheaders_groupTypes_input!): groupSubheaders_groupTypes
  update_groupTypes_items(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_groupTypes_input!): [groupTypes!]!
  update_groupTypes_batch(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_groupTypes_input!]): [groupTypes!]!
  update_groupTypes_item(id: ID!, data: update_groupTypes_input!): groupTypes
  update_marker_icons_items(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_marker_icons_input!): [marker_icons!]!
  update_marker_icons_batch(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_marker_icons_input!]): [marker_icons!]!
  update_marker_icons_item(id: ID!, data: update_marker_icons_input!): marker_icons
  update_inviteLinks_items(filter: inviteLinks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_inviteLinks_input!): [inviteLinks!]!
  update_inviteLinks_batch(filter: inviteLinks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_inviteLinks_input!]): [inviteLinks!]!
  update_inviteLinks_item(id: ID!, data: update_inviteLinks_input!): inviteLinks
  update_items_items(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_items_input!): [items!]!
  update_items_batch(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_items_input!]): [items!]!
  update_items_item(id: ID!, data: update_items_input!): items
  update_itemSecrets_items(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_itemSecrets_input!): [itemSecrets!]!
  update_itemSecrets_batch(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_itemSecrets_input!]): [itemSecrets!]!
  update_itemSecrets_item(id: ID!, data: update_itemSecrets_input!): itemSecrets
  update_layers_items(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_layers_input!): [layers!]!
  update_layers_batch(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_layers_input!]): [layers!]!
  update_layers_item(id: ID!, data: update_layers_input!): layers
  update_items_files_items(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_items_files_input!): [items_files!]!
  update_items_files_batch(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_items_files_input!]): [items_files!]!
  update_items_files_item(id: ID!, data: update_items_files_input!): items_files
  update_items_items_items(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_items_items_input!): [items_items!]!
  update_items_items_batch(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_items_items_input!]): [items_items!]!
  update_items_items_item(id: ID!, data: update_items_items_input!): items_items
  update_items_tags_items(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_items_tags_input!): [items_tags!]!
  update_items_tags_batch(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_items_tags_input!]): [items_tags!]!
  update_items_tags_item(id: ID!, data: update_items_tags_input!): items_tags
  update_tags_items(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_tags_input!): [tags!]!
  update_tags_batch(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_tags_input!]): [tags!]!
  update_tags_item(id: ID!, data: update_tags_input!): tags
  update_items_tags_1_items(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_items_tags_1_input!): [items_tags_1!]!
  update_items_tags_1_batch(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_items_tags_1_input!]): [items_tags_1!]!
  update_items_tags_1_item(id: ID!, data: update_items_tags_1_input!): items_tags_1
  update_junction_directus_users_tags_items(filter: junction_directus_users_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_junction_directus_users_tags_input!): [junction_directus_users_tags!]!
  update_junction_directus_users_tags_batch(filter: junction_directus_users_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_junction_directus_users_tags_input!]): [junction_directus_users_tags!]!
  update_junction_directus_users_tags_item(id: ID!, data: update_junction_directus_users_tags_input!): junction_directus_users_tags
  update_junction_directus_users_tags_1_items(filter: junction_directus_users_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_junction_directus_users_tags_1_input!): [junction_directus_users_tags_1!]!
  update_junction_directus_users_tags_1_batch(filter: junction_directus_users_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_junction_directus_users_tags_1_input!]): [junction_directus_users_tags_1!]!
  update_junction_directus_users_tags_1_item(id: ID!, data: update_junction_directus_users_tags_1_input!): junction_directus_users_tags_1
  update_types_items(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_types_input!): [types!]!
  update_types_batch(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_types_input!]): [types!]!
  update_types_item(id: ID!, data: update_types_input!): types
  update_layers_directus_users_1_items(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_layers_directus_users_1_input!): [layers_directus_users_1!]!
  update_layers_directus_users_1_batch(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_layers_directus_users_1_input!]): [layers_directus_users_1!]!
  update_layers_directus_users_1_item(id: ID!, data: update_layers_directus_users_1_input!): layers_directus_users_1
  update_layers_files_items(filter: layers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_layers_files_input!): [layers_files!]!
  update_layers_files_batch(filter: layers_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_layers_files_input!]): [layers_files!]!
  update_layers_files_item(id: ID!, data: update_layers_files_input!): layers_files
  update_layers_maps_items(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_layers_maps_input!): [layers_maps!]!
  update_layers_maps_batch(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_layers_maps_input!]): [layers_maps!]!
  update_layers_maps_item(id: ID!, data: update_layers_maps_input!): layers_maps
  update_maps_items(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_maps_input!): [maps!]!
  update_maps_batch(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_maps_input!]): [maps!]!
  update_maps_item(id: ID!, data: update_maps_input!): maps
  update_Themes_items(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_Themes_input!): [Themes!]!
  update_Themes_batch(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_Themes_input!]): [Themes!]!
  update_Themes_item(id: ID!, data: update_Themes_input!): Themes
  update_startEnd_items(filter: startEnd_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_startEnd_input!): [startEnd!]!
  update_startEnd_batch(filter: startEnd_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_startEnd_input!]): [startEnd!]!
  update_startEnd_item(id: ID!, data: update_startEnd_input!): startEnd
  update_team_items(filter: team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_team_input!): [team!]!
  update_team_batch(filter: team_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_team_input!]): [team!]!
  update_team_item(id: ID!, data: update_team_input!): team
  update_texts_items(filter: texts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_texts_input!): [texts!]!
  update_texts_batch(filter: texts_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_texts_input!]): [texts!]!
  update_texts_item(id: ID!, data: update_texts_input!): texts
  update_types_profileTemplate_items(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_types_profileTemplate_input!): [types_profileTemplate!]!
  update_types_profileTemplate_batch(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_types_profileTemplate_input!]): [types_profileTemplate!]!
  update_types_profileTemplate_item(id: ID!, data: update_types_profileTemplate_input!): types_profileTemplate
  delete_directus_sync_id_map_items(ids: [ID]!): delete_many
  delete_directus_sync_id_map_item(id: ID!): delete_one
  delete_relations_items(ids: [ID]!): delete_many
  delete_relations_item(id: ID!): delete_one
  delete_attestations_items(ids: [ID]!): delete_many
  delete_attestations_item(id: ID!): delete_one
  delete_attestations_directus_users_items(ids: [ID]!): delete_many
  delete_attestations_directus_users_item(id: ID!): delete_one
  delete_contactInfos_items(ids: [ID]!): delete_many
  delete_contactInfos_item(id: ID!): delete_one
  delete_crowdfundings_items(ids: [ID]!): delete_many
  delete_crowdfundings_item(id: ID!): delete_one
  delete_features_items(ids: [ID]!): delete_many
  delete_features_item(id: ID!): delete_one
  delete_gallery_items(ids: [ID]!): delete_many
  delete_gallery_item(id: ID!): delete_one
  delete_groupSubheaders_items(ids: [ID]!): delete_many
  delete_groupSubheaders_item(id: ID!): delete_one
  delete_groupSubheaders_groupTypes_items(ids: [ID]!): delete_many
  delete_groupSubheaders_groupTypes_item(id: ID!): delete_one
  delete_groupTypes_items(ids: [ID]!): delete_many
  delete_groupTypes_item(id: ID!): delete_one
  delete_marker_icons_items(ids: [ID]!): delete_many
  delete_marker_icons_item(id: ID!): delete_one
  delete_inviteLinks_items(ids: [ID]!): delete_many
  delete_inviteLinks_item(id: ID!): delete_one
  delete_items_items(ids: [ID]!): delete_many
  delete_items_item(id: ID!): delete_one
  delete_itemSecrets_items(ids: [ID]!): delete_many
  delete_itemSecrets_item(id: ID!): delete_one
  delete_layers_items(ids: [ID]!): delete_many
  delete_layers_item(id: ID!): delete_one
  delete_items_files_items(ids: [ID]!): delete_many
  delete_items_files_item(id: ID!): delete_one
  delete_items_items_items(ids: [ID]!): delete_many
  delete_items_items_item(id: ID!): delete_one
  delete_items_tags_items(ids: [ID]!): delete_many
  delete_items_tags_item(id: ID!): delete_one
  delete_tags_items(ids: [ID]!): delete_many
  delete_tags_item(id: ID!): delete_one
  delete_items_tags_1_items(ids: [ID]!): delete_many
  delete_items_tags_1_item(id: ID!): delete_one
  delete_junction_directus_users_tags_items(ids: [ID]!): delete_many
  delete_junction_directus_users_tags_item(id: ID!): delete_one
  delete_junction_directus_users_tags_1_items(ids: [ID]!): delete_many
  delete_junction_directus_users_tags_1_item(id: ID!): delete_one
  delete_types_items(ids: [ID]!): delete_many
  delete_types_item(id: ID!): delete_one
  delete_layers_directus_users_1_items(ids: [ID]!): delete_many
  delete_layers_directus_users_1_item(id: ID!): delete_one
  delete_layers_files_items(ids: [ID]!): delete_many
  delete_layers_files_item(id: ID!): delete_one
  delete_layers_maps_items(ids: [ID]!): delete_many
  delete_layers_maps_item(id: ID!): delete_one
  delete_maps_items(ids: [ID]!): delete_many
  delete_maps_item(id: ID!): delete_one
  delete_Themes_items(ids: [ID]!): delete_many
  delete_Themes_item(id: ID!): delete_one
  delete_startEnd_items(ids: [ID]!): delete_many
  delete_startEnd_item(id: ID!): delete_one
  delete_team_items(ids: [ID]!): delete_many
  delete_team_item(id: ID!): delete_one
  delete_texts_items(ids: [ID]!): delete_many
  delete_texts_item(id: ID!): delete_one
  delete_types_profileTemplate_items(ids: [ID]!): delete_many
  delete_types_profileTemplate_item(id: ID!): delete_one
}

type Subscription {
  directus_roles_mutated(event: EventEnum): directus_roles_mutated
  directus_files_mutated(event: EventEnum): directus_files_mutated
  directus_folders_mutated(event: EventEnum): directus_folders_mutated
  directus_activity_mutated(event: EventEnum): directus_activity_mutated
  directus_revisions_mutated(event: EventEnum): directus_revisions_mutated
  directus_permissions_mutated(event: EventEnum): directus_permissions_mutated
  directus_users_mutated(event: EventEnum): directus_users_mutated
  directus_presets_mutated(event: EventEnum): directus_presets_mutated
  directus_webhooks_mutated(event: EventEnum): directus_webhooks_mutated
  directus_panels_mutated(event: EventEnum): directus_panels_mutated
  directus_notifications_mutated(event: EventEnum): directus_notifications_mutated
  directus_shares_mutated(event: EventEnum): directus_shares_mutated
  directus_flows_mutated(event: EventEnum): directus_flows_mutated
  directus_operations_mutated(event: EventEnum): directus_operations_mutated
  directus_dashboards_mutated(event: EventEnum): directus_dashboards_mutated
  directus_translations_mutated(event: EventEnum): directus_translations_mutated
  directus_access_mutated(event: EventEnum): directus_access_mutated
  directus_comments_mutated(event: EventEnum): directus_comments_mutated
  directus_versions_mutated(event: EventEnum): directus_versions_mutated
  directus_settings_mutated(event: EventEnum): directus_settings_mutated
  directus_sync_id_map_mutated(event: EventEnum): directus_sync_id_map_mutated
  directus_policies_mutated(event: EventEnum): directus_policies_mutated
  relations_mutated(event: EventEnum): relations_mutated
  attestations_mutated(event: EventEnum): attestations_mutated
  attestations_directus_users_mutated(event: EventEnum): attestations_directus_users_mutated
  contactInfos_mutated(event: EventEnum): contactInfos_mutated
  crowdfundings_mutated(event: EventEnum): crowdfundings_mutated
  features_mutated(event: EventEnum): features_mutated
  gallery_mutated(event: EventEnum): gallery_mutated
  groupSubheaders_mutated(event: EventEnum): groupSubheaders_mutated
  groupSubheaders_groupTypes_mutated(event: EventEnum): groupSubheaders_groupTypes_mutated
  groupTypes_mutated(event: EventEnum): groupTypes_mutated
  marker_icons_mutated(event: EventEnum): marker_icons_mutated
  inviteLinks_mutated(event: EventEnum): inviteLinks_mutated
  items_mutated(event: EventEnum): items_mutated
  itemSecrets_mutated(event: EventEnum): itemSecrets_mutated
  layers_mutated(event: EventEnum): layers_mutated
  items_files_mutated(event: EventEnum): items_files_mutated
  items_items_mutated(event: EventEnum): items_items_mutated
  items_tags_mutated(event: EventEnum): items_tags_mutated
  tags_mutated(event: EventEnum): tags_mutated
  items_tags_1_mutated(event: EventEnum): items_tags_1_mutated
  junction_directus_users_tags_mutated(event: EventEnum): junction_directus_users_tags_mutated
  junction_directus_users_tags_1_mutated(event: EventEnum): junction_directus_users_tags_1_mutated
  types_mutated(event: EventEnum): types_mutated
  layers_directus_users_1_mutated(event: EventEnum): layers_directus_users_1_mutated
  layers_files_mutated(event: EventEnum): layers_files_mutated
  layers_maps_mutated(event: EventEnum): layers_maps_mutated
  maps_mutated(event: EventEnum): maps_mutated
  Themes_mutated(event: EventEnum): Themes_mutated
  startEnd_mutated(event: EventEnum): startEnd_mutated
  team_mutated(event: EventEnum): team_mutated
  texts_mutated(event: EventEnum): texts_mutated
  types_profileTemplate_mutated(event: EventEnum): types_profileTemplate_mutated
}

"""The `Boolean` scalar type represents `true` or `false`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""BigInt value"""
scalar GraphQLBigInt

"""GeoJSON value"""
scalar GraphQLGeoJSON

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""Hashed string values"""
scalar Hash

"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""
scalar ID

"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

union types_profileTemplate_item_union = groupSubheaders | contactInfos | texts | startEnd | gallery | crowdfundings | inviteLinks | relations

type attestations {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  emoji: String
  id: ID!
  shape: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  to(filter: attestations_directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [attestations_directus_users]
  to_func: count_functions
}

type attestations_aggregated {
  group: JSON
  countAll: Int
  count: attestations_aggregated_count
  countDistinct: attestations_aggregated_count
}

type attestations_aggregated_count {
  color: Int
  date_created: Int
  emoji: Int
  id: Int
  shape: Int
  text: Int
  user_created: Int
  to: Int
}

type attestations_directus_users {
  attestations_id(filter: attestations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): attestations
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
}

type attestations_directus_users_aggregated {
  group: JSON
  countAll: Int
  count: attestations_directus_users_aggregated_count
  countDistinct: attestations_directus_users_aggregated_count
  avg: attestations_directus_users_aggregated_fields
  sum: attestations_directus_users_aggregated_fields
  avgDistinct: attestations_directus_users_aggregated_fields
  sumDistinct: attestations_directus_users_aggregated_fields
  min: attestations_directus_users_aggregated_fields
  max: attestations_directus_users_aggregated_fields
}

type attestations_directus_users_aggregated_count {
  attestations_id: Int
  directus_users_id: Int
  id: Int
}

type attestations_directus_users_aggregated_fields {
  id: Float
}

type attestations_directus_users_mutated {
  key: ID!
  event: EventEnum
  data: attestations_directus_users
}

type attestations_mutated {
  key: ID!
  event: EventEnum
  data: attestations
}

type contactInfos {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type contactInfos_aggregated {
  group: JSON
  countAll: Int
  count: contactInfos_aggregated_count
  countDistinct: contactInfos_aggregated_count
}

type contactInfos_aggregated_count {
  date_created: Int
  date_updated: Int
  heading: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type contactInfos_mutated {
  key: ID!
  event: EventEnum
  data: contactInfos
}

type count_functions {
  count: Int
}

type crowdfundings {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type crowdfundings_aggregated {
  group: JSON
  countAll: Int
  count: crowdfundings_aggregated_count
  countDistinct: crowdfundings_aggregated_count
}

type crowdfundings_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type crowdfundings_mutated {
  key: ID!
  event: EventEnum
  data: crowdfundings
}

type datetime_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
  hour: Int
  minute: Int
  second: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type directus_access {
  id: ID!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
  sort: Int
}

type directus_access_mutated {
  key: ID!
  event: EventEnum
  data: directus_access
}

type directus_activity {
  id: ID!
  action: String!
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  timestamp: Date
  timestamp_func: datetime_functions
  ip: String
  user_agent: String
  collection: String!
  item: String!
  origin: String
  revisions(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_revisions]
  revisions_func: count_functions
}

type directus_activity_mutated {
  key: ID!
  event: EventEnum
  data: directus_activity
}

type directus_comments {
  id: ID!
  collection: String!
  item: String!
  comment: String!
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_comments_mutated {
  key: ID!
  event: EventEnum
  data: directus_comments
}

type directus_dashboards {
  id: ID!
  name: String!
  icon: String
  note: String
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  color: String
  panels(filter: directus_panels_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_panels]
  panels_func: count_functions
}

type directus_dashboards_mutated {
  key: ID!
  event: EventEnum
  data: directus_dashboards
}

type directus_files {
  id: ID!
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  uploaded_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  created_on: Date
  created_on_func: datetime_functions
  modified_by(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  modified_on: Date
  modified_on_func: datetime_functions
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  tags_func: count_functions
  metadata: JSON
  metadata_func: count_functions
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  tus_data_func: count_functions
  uploaded_on: Date
  uploaded_on_func: datetime_functions
}

type directus_files_mutated {
  key: ID!
  event: EventEnum
  data: directus_files
}

type directus_flows {
  id: ID!
  name: String!
  icon: String
  color: String
  description: String
  status: String
  trigger: String
  accountability: String
  options: JSON
  options_func: count_functions
  operation(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  operations(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_operations]
  operations_func: count_functions
}

type directus_flows_mutated {
  key: ID!
  event: EventEnum
  data: directus_flows
}

type directus_folders {
  id: ID!
  name: String!
  parent(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
}

type directus_folders_mutated {
  key: ID!
  event: EventEnum
  data: directus_folders
}

type directus_notifications {
  id: ID!
  timestamp: Date
  timestamp_func: datetime_functions
  status: String
  recipient(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  sender(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  subject: String!
  message: String
  collection: String
  item: String
}

type directus_notifications_mutated {
  key: ID!
  event: EventEnum
  data: directus_notifications
}

type directus_operations {
  id: ID!
  name: String
  key: String!
  type: String!
  position_x: Int!
  position_y: Int!
  options: JSON
  options_func: count_functions
  resolve(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  reject(filter: directus_operations_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_operations
  flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_operations_mutated {
  key: ID!
  event: EventEnum
  data: directus_operations
}

type directus_panels {
  id: ID!
  dashboard(filter: directus_dashboards_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_dashboards
  name: String
  icon: String
  color: String
  show_header: Boolean!
  note: String
  type: String!
  position_x: Int!
  position_y: Int!
  width: Int!
  height: Int!
  options: JSON
  options_func: count_functions
  date_created: Date
  date_created_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type directus_panels_mutated {
  key: ID!
  event: EventEnum
  data: directus_panels
}

type directus_permissions {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  permissions_func: count_functions
  validation: JSON
  validation_func: count_functions
  presets: JSON
  presets_func: count_functions
  fields: [String]
  policy(filter: directus_policies_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_policies
}

type directus_permissions_mutated {
  key: ID!
  event: EventEnum
  data: directus_permissions
}

type directus_policies {
  id: ID!
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions(filter: directus_permissions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_permissions]
  permissions_func: count_functions
  users(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  users_func: count_functions
  roles(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  roles_func: count_functions
}

type directus_policies_mutated {
  key: ID!
  event: EventEnum
  data: directus_policies
}

type directus_presets {
  id: ID!
  bookmark: String
  user(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  collection: String
  search: String
  layout: String
  layout_query: JSON
  layout_query_func: count_functions
  layout_options: JSON
  layout_options_func: count_functions
  refresh_interval: Int
  filter: JSON
  filter_func: count_functions
  icon: String
  color: String
}

type directus_presets_mutated {
  key: ID!
  event: EventEnum
  data: directus_presets
}

type directus_revisions {
  id: ID!
  activity(filter: directus_activity_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_activity
  collection: String!
  item: String!
  data: JSON
  data_func: count_functions
  delta: JSON
  delta_func: count_functions
  parent(filter: directus_revisions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_revisions
  version(filter: directus_versions_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_versions
}

type directus_revisions_mutated {
  key: ID!
  event: EventEnum
  data: directus_revisions
}

type directus_roles {
  id: ID!
  name: String!
  icon: String
  description: String
  parent(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  children(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_roles]
  children_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
  users(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_users]
  users_func: count_functions
}

type directus_roles_mutated {
  key: ID!
  event: EventEnum
  data: directus_roles
}

type directus_settings {
  id: ID!
  project_name: String
  project_url: String

  """$t:field_options.directus_settings.project_color_note"""
  project_color: String
  project_logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_foreground(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_background(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  public_note: String
  auth_login_attempts: Int
  auth_password_policy: String
  storage_asset_transform: String
  storage_asset_presets: JSON
  storage_asset_presets_func: count_functions
  custom_css: String
  storage_default_folder(filter: directus_folders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_folders
  basemaps: JSON
  basemaps_func: count_functions
  mapbox_key: String
  module_bar: JSON
  module_bar_func: count_functions
  project_descriptor: String
  default_language: String
  custom_aspect_ratios: JSON
  custom_aspect_ratios_func: count_functions
  public_favicon(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  default_appearance: String
  default_theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  default_theme_dark: String
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  report_error_url: String
  report_bug_url: String
  report_feature_url: String

  """$t:fields.directus_settings.public_registration_note"""
  public_registration: Boolean!

  """$t:fields.directus_settings.public_registration_verify_email_note"""
  public_registration_verify_email: Boolean
  public_registration_role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:fields.directus_settings.public_registration_email_filter_note"""
  public_registration_email_filter: JSON
  public_registration_email_filter_func: count_functions
  visual_editor_urls: JSON
  visual_editor_urls_func: count_functions
}

type directus_settings_mutated {
  key: ID!
  event: EventEnum
  data: directus_settings
}

type directus_shares {
  id: ID!
  name: String
  collection: String!
  item: String!
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles

  """$t:shared_leave_blank_for_passwordless_access"""
  password: Hash
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  date_created: Date
  date_created_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_start: Date
  date_start_func: datetime_functions

  """$t:shared_leave_blank_for_unlimited"""
  date_end: Date
  date_end_func: datetime_functions
  times_used: Int

  """$t:shared_leave_blank_for_unlimited"""
  max_uses: Int
}

type directus_shares_mutated {
  key: ID!
  event: EventEnum
  data: directus_shares
}

type directus_sync_id_map {
  id: ID!
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
  created_at_func: datetime_functions
}

type directus_sync_id_map_aggregated {
  group: JSON
  countAll: Int
  count: directus_sync_id_map_aggregated_count
  countDistinct: directus_sync_id_map_aggregated_count
  avg: directus_sync_id_map_aggregated_fields
  sum: directus_sync_id_map_aggregated_fields
  avgDistinct: directus_sync_id_map_aggregated_fields
  sumDistinct: directus_sync_id_map_aggregated_fields
  min: directus_sync_id_map_aggregated_fields
  max: directus_sync_id_map_aggregated_fields
}

type directus_sync_id_map_aggregated_count {
  id: Int
  table: Int
  sync_id: Int
  local_id: Int
  created_at: Int
}

type directus_sync_id_map_aggregated_fields {
  id: Float
}

type directus_sync_id_map_mutated {
  key: ID!
  event: EventEnum
  data: directus_sync_id_map
}

type directus_translations {
  id: ID!
  language: String!
  key: String!
  value: String!
}

type directus_translations_mutated {
  key: ID!
  event: EventEnum
  data: directus_translations
}

type directus_users {
  id: ID!
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  tags_func: count_functions
  avatar(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  language: String
  tfa_secret: Hash
  status: String
  role(filter: directus_roles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_roles
  token: Hash
  last_access: Date
  last_access_func: datetime_functions
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  auth_data_func: count_functions
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_light_overrides_func: count_functions
  theme_dark_overrides: JSON
  theme_dark_overrides_func: count_functions
  imported: Boolean
  wc_user: Boolean
  notifications(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_directus_users_1]
  notifications_func: count_functions
  policies(filter: directus_access_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [directus_access]
  policies_func: count_functions
}

type directus_users_mutated {
  key: ID!
  event: EventEnum
  data: directus_users
}

type directus_versions {
  id: ID!
  key: String!
  name: String
  collection: String!
  item: String!
  hash: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  delta: JSON
  delta_func: count_functions
}

type directus_versions_mutated {
  key: ID!
  event: EventEnum
  data: directus_versions
}

type directus_webhooks {
  id: ID!
  name: String!
  method: String
  url: String!
  status: String
  data: Boolean
  actions: [String]!
  collections: [String]!
  headers: JSON
  headers_func: count_functions
  was_active_before_deprecation: Boolean!
  migrated_flow(filter: directus_flows_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_flows
}

type directus_webhooks_mutated {
  key: ID!
  event: EventEnum
  data: directus_webhooks
}

type features {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  id: ID!
  sort: Int
  status: String
  symbol: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type features_aggregated {
  group: JSON
  countAll: Int
  count: features_aggregated_count
  countDistinct: features_aggregated_count
  avg: features_aggregated_fields
  sum: features_aggregated_fields
  avgDistinct: features_aggregated_fields
  sumDistinct: features_aggregated_fields
  min: features_aggregated_fields
  max: features_aggregated_fields
}

type features_aggregated_count {
  date_created: Int
  date_updated: Int
  heading: Int
  id: Int
  sort: Int
  status: Int
  symbol: Int
  text: Int
  user_created: Int
  user_updated: Int
}

type features_aggregated_fields {
  id: Float
  sort: Float
}

type features_mutated {
  key: ID!
  event: EventEnum
  data: features
}

type gallery {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  hideInputLabel: Boolean
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type gallery_aggregated {
  group: JSON
  countAll: Int
  count: gallery_aggregated_count
  countDistinct: gallery_aggregated_count
}

type gallery_aggregated_count {
  date_created: Int
  date_updated: Int
  hideInputLabel: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type gallery_mutated {
  key: ID!
  event: EventEnum
  data: gallery
}

type groupSubheaders {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  groupStates: JSON
  groupStates_func: count_functions
  id: ID!
  platforms: JSON
  platforms_func: count_functions
  shareBaseUrl: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  groupTypes(filter: groupSubheaders_groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [groupSubheaders_groupTypes]
  groupTypes_func: count_functions
}

type groupSubheaders_aggregated {
  group: JSON
  countAll: Int
  count: groupSubheaders_aggregated_count
  countDistinct: groupSubheaders_aggregated_count
}

type groupSubheaders_aggregated_count {
  date_created: Int
  date_updated: Int
  groupStates: Int
  id: Int
  platforms: Int
  shareBaseUrl: Int
  user_created: Int
  user_updated: Int
  groupTypes: Int
}

type groupSubheaders_groupTypes {
  groupSubheaders_id(filter: groupSubheaders_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): groupSubheaders
  groupTypes_id(filter: groupTypes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): groupTypes
  id: ID!
}

type groupSubheaders_groupTypes_aggregated {
  group: JSON
  countAll: Int
  count: groupSubheaders_groupTypes_aggregated_count
  countDistinct: groupSubheaders_groupTypes_aggregated_count
  avg: groupSubheaders_groupTypes_aggregated_fields
  sum: groupSubheaders_groupTypes_aggregated_fields
  avgDistinct: groupSubheaders_groupTypes_aggregated_fields
  sumDistinct: groupSubheaders_groupTypes_aggregated_fields
  min: groupSubheaders_groupTypes_aggregated_fields
  max: groupSubheaders_groupTypes_aggregated_fields
}

type groupSubheaders_groupTypes_aggregated_count {
  groupSubheaders_id: Int
  groupTypes_id: Int
  id: Int
}

type groupSubheaders_groupTypes_aggregated_fields {
  id: Float
}

type groupSubheaders_groupTypes_mutated {
  key: ID!
  event: EventEnum
  data: groupSubheaders_groupTypes
}

type groupSubheaders_mutated {
  key: ID!
  event: EventEnum
  data: groupSubheaders
}

type groupTypes {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  name: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type groupTypes_aggregated {
  group: JSON
  countAll: Int
  count: groupTypes_aggregated_count
  countDistinct: groupTypes_aggregated_count
}

type groupTypes_aggregated_count {
  color: Int
  date_created: Int
  date_updated: Int
  id: Int
  image: Int
  markerIcon: Int
  name: Int
  user_created: Int
  user_updated: Int
}

type groupTypes_mutated {
  key: ID!
  event: EventEnum
  data: groupTypes
}

type inviteLinks {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type inviteLinks_aggregated {
  group: JSON
  countAll: Int
  count: inviteLinks_aggregated_count
  countDistinct: inviteLinks_aggregated_count
}

type inviteLinks_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type inviteLinks_mutated {
  key: ID!
  event: EventEnum
  data: inviteLinks
}

type items {
  color: String
  contact: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  draft: Boolean
  end: Date
  end_func: datetime_functions
  extended: JSON
  extended_func: count_functions
  group_type: String
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  image_external: String
  layer(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  name: String
  next_appointment: String
  openCollectiveSlug: String
  parent(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  position: GraphQLGeoJSON
  public_edit: Boolean
  slug: String
  start: Date
  start_func: datetime_functions
  status: String
  subname: String
  telephone: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  gallery(filter: items_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_files]
  gallery_func: count_functions
  needs(filter: items_tags_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags_1]
  needs_func: count_functions
  offers(filter: items_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_tags]
  offers_func: count_functions
  relations(filter: items_items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [items_items]
  relations_func: count_functions
  secrets(filter: itemSecrets_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [itemSecrets]
  secrets_func: count_functions
}

type items_aggregated {
  group: JSON
  countAll: Int
  count: items_aggregated_count
  countDistinct: items_aggregated_count
}

type items_aggregated_count {
  color: Int
  contact: Int
  date_created: Int
  date_updated: Int
  draft: Int
  end: Int
  extended: Int
  group_type: Int
  id: Int
  image: Int
  image_external: Int
  layer: Int
  markerIcon: Int
  name: Int
  next_appointment: Int
  openCollectiveSlug: Int
  parent: Int
  position: Int
  public_edit: Int
  slug: Int
  start: Int
  status: Int
  subname: Int
  telephone: Int
  text: Int
  user_created: Int
  user_updated: Int
  gallery: Int
  needs: Int
  offers: Int
  relations: Int
  secrets: Int
}

type items_files {
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
}

type items_files_aggregated {
  group: JSON
  countAll: Int
  count: items_files_aggregated_count
  countDistinct: items_files_aggregated_count
  avg: items_files_aggregated_fields
  sum: items_files_aggregated_fields
  avgDistinct: items_files_aggregated_fields
  sumDistinct: items_files_aggregated_fields
  min: items_files_aggregated_fields
  max: items_files_aggregated_fields
}

type items_files_aggregated_count {
  directus_files_id: Int
  id: Int
  items_id: Int
}

type items_files_aggregated_fields {
  id: Float
}

type items_files_mutated {
  key: ID!
  event: EventEnum
  data: items_files
}

type items_items {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  related_items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  type: String
}

type items_items_aggregated {
  group: JSON
  countAll: Int
  count: items_items_aggregated_count
  countDistinct: items_items_aggregated_count
  avg: items_items_aggregated_fields
  sum: items_items_aggregated_fields
  avgDistinct: items_items_aggregated_fields
  sumDistinct: items_items_aggregated_fields
  min: items_items_aggregated_fields
  max: items_items_aggregated_fields
}

type items_items_aggregated_count {
  id: Int
  items_id: Int
  related_items_id: Int
  type: Int
}

type items_items_aggregated_fields {
  id: Float
}

type items_items_mutated {
  key: ID!
  event: EventEnum
  data: items_items
}

type items_mutated {
  key: ID!
  event: EventEnum
  data: items
}

type items_tags {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type items_tags_1 {
  id: ID!
  items_id(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type items_tags_1_aggregated {
  group: JSON
  countAll: Int
  count: items_tags_1_aggregated_count
  countDistinct: items_tags_1_aggregated_count
  avg: items_tags_1_aggregated_fields
  sum: items_tags_1_aggregated_fields
  avgDistinct: items_tags_1_aggregated_fields
  sumDistinct: items_tags_1_aggregated_fields
  min: items_tags_1_aggregated_fields
  max: items_tags_1_aggregated_fields
}

type items_tags_1_aggregated_count {
  id: Int
  items_id: Int
  tags_id: Int
}

type items_tags_1_aggregated_fields {
  id: Float
}

type items_tags_1_mutated {
  key: ID!
  event: EventEnum
  data: items_tags_1
}

type items_tags_aggregated {
  group: JSON
  countAll: Int
  count: items_tags_aggregated_count
  countDistinct: items_tags_aggregated_count
  avg: items_tags_aggregated_fields
  sum: items_tags_aggregated_fields
  avgDistinct: items_tags_aggregated_fields
  sumDistinct: items_tags_aggregated_fields
  min: items_tags_aggregated_fields
  max: items_tags_aggregated_fields
}

type items_tags_aggregated_count {
  id: Int
  items_id: Int
  tags_id: Int
}

type items_tags_aggregated_fields {
  id: Float
}

type items_tags_mutated {
  key: ID!
  event: EventEnum
  data: items_tags
}

type itemSecrets {
  item(filter: items_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): items
  secret: ID!
}

type itemSecrets_aggregated {
  group: JSON
  countAll: Int
  count: itemSecrets_aggregated_count
  countDistinct: itemSecrets_aggregated_count
}

type itemSecrets_aggregated_count {
  item: Int
  secret: Int
}

type itemSecrets_mutated {
  key: ID!
  event: EventEnum
  data: itemSecrets
}

type junction_directus_users_tags {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type junction_directus_users_tags_1 {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  tags_id(filter: tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): tags
}

type junction_directus_users_tags_1_aggregated {
  group: JSON
  countAll: Int
  count: junction_directus_users_tags_1_aggregated_count
  countDistinct: junction_directus_users_tags_1_aggregated_count
  avg: junction_directus_users_tags_1_aggregated_fields
  sum: junction_directus_users_tags_1_aggregated_fields
  avgDistinct: junction_directus_users_tags_1_aggregated_fields
  sumDistinct: junction_directus_users_tags_1_aggregated_fields
  min: junction_directus_users_tags_1_aggregated_fields
  max: junction_directus_users_tags_1_aggregated_fields
}

type junction_directus_users_tags_1_aggregated_count {
  directus_users_id: Int
  id: Int
  tags_id: Int
}

type junction_directus_users_tags_1_aggregated_fields {
  id: Float
}

type junction_directus_users_tags_1_mutated {
  key: ID!
  event: EventEnum
  data: junction_directus_users_tags_1
}

type junction_directus_users_tags_aggregated {
  group: JSON
  countAll: Int
  count: junction_directus_users_tags_aggregated_count
  countDistinct: junction_directus_users_tags_aggregated_count
  avg: junction_directus_users_tags_aggregated_fields
  sum: junction_directus_users_tags_aggregated_fields
  avgDistinct: junction_directus_users_tags_aggregated_fields
  sumDistinct: junction_directus_users_tags_aggregated_fields
  min: junction_directus_users_tags_aggregated_fields
  max: junction_directus_users_tags_aggregated_fields
}

type junction_directus_users_tags_aggregated_count {
  directus_users_id: Int
  id: Int
  tags_id: Int
}

type junction_directus_users_tags_aggregated_fields {
  id: Float
}

type junction_directus_users_tags_mutated {
  key: ID!
  event: EventEnum
  data: junction_directus_users_tags
}

type layers {
  id: ID!
  index_plus_button: Boolean
  itemType(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): types
  item_presets: JSON
  item_presets_func: count_functions
  listed: Boolean
  markerDefaultColor2: String
  markerIcon(filter: marker_icons_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): marker_icons
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_maps]
  maps_func: count_functions
  notifications(filter: layers_directus_users_1_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_directus_users_1]
  notifications_func: count_functions
}

type layers_aggregated {
  group: JSON
  countAll: Int
  count: layers_aggregated_count
  countDistinct: layers_aggregated_count
  avg: layers_aggregated_fields
  sum: layers_aggregated_fields
  avgDistinct: layers_aggregated_fields
  sumDistinct: layers_aggregated_fields
  min: layers_aggregated_fields
  max: layers_aggregated_fields
}

type layers_aggregated_count {
  id: Int
  index_plus_button: Int
  itemType: Int
  item_presets: Int
  listed: Int
  markerDefaultColor2: Int
  markerIcon: Int
  markerShape: Int
  menuColor: Int
  menuText: Int
  name: Int
  onlyOnePerOwner: Int
  public_edit_items: Int
  sort: Int
  userProfileLayer: Int
  maps: Int
  notifications: Int
}

type layers_aggregated_fields {
  sort: Float
}

type layers_directus_users_1 {
  directus_users_id(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
}

type layers_directus_users_1_aggregated {
  group: JSON
  countAll: Int
  count: layers_directus_users_1_aggregated_count
  countDistinct: layers_directus_users_1_aggregated_count
  avg: layers_directus_users_1_aggregated_fields
  sum: layers_directus_users_1_aggregated_fields
  avgDistinct: layers_directus_users_1_aggregated_fields
  sumDistinct: layers_directus_users_1_aggregated_fields
  min: layers_directus_users_1_aggregated_fields
  max: layers_directus_users_1_aggregated_fields
}

type layers_directus_users_1_aggregated_count {
  directus_users_id: Int
  id: Int
  layers_id: Int
}

type layers_directus_users_1_aggregated_fields {
  id: Float
}

type layers_directus_users_1_mutated {
  key: ID!
  event: EventEnum
  data: layers_directus_users_1
}

type layers_files {
  directus_files_id(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
}

type layers_files_aggregated {
  group: JSON
  countAll: Int
  count: layers_files_aggregated_count
  countDistinct: layers_files_aggregated_count
  avg: layers_files_aggregated_fields
  sum: layers_files_aggregated_fields
  avgDistinct: layers_files_aggregated_fields
  sumDistinct: layers_files_aggregated_fields
  min: layers_files_aggregated_fields
  max: layers_files_aggregated_fields
}

type layers_files_aggregated_count {
  directus_files_id: Int
  id: Int
  layers_id: Int
}

type layers_files_aggregated_fields {
  id: Float
}

type layers_files_mutated {
  key: ID!
  event: EventEnum
  data: layers_files
}

type layers_maps {
  id: ID!
  layers_id(filter: layers_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): layers
  maps_id(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): maps
}

type layers_maps_aggregated {
  group: JSON
  countAll: Int
  count: layers_maps_aggregated_count
  countDistinct: layers_maps_aggregated_count
  avg: layers_maps_aggregated_fields
  sum: layers_maps_aggregated_fields
  avgDistinct: layers_maps_aggregated_fields
  sumDistinct: layers_maps_aggregated_fields
  min: layers_maps_aggregated_fields
  max: layers_maps_aggregated_fields
}

type layers_maps_aggregated_count {
  id: Int
  layers_id: Int
  maps_id: Int
}

type layers_maps_aggregated_fields {
  id: Float
}

type layers_maps_mutated {
  key: ID!
  event: EventEnum
  data: layers_maps
}

type layers_mutated {
  key: ID!
  event: EventEnum
  data: layers
}

type maps {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme(filter: Themes_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): Themes

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  geo_func: count_functions
  hide_signup: Boolean
  id: ID!
  info_open: Boolean
  logo(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean!
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers(filter: layers_maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [layers_maps]
  layers_func: count_functions
}

type maps_aggregated {
  group: JSON
  countAll: Int
  count: maps_aggregated_count
  countDistinct: maps_aggregated_count
  avg: maps_aggregated_fields
  sum: maps_aggregated_fields
  avgDistinct: maps_aggregated_fields
  sumDistinct: maps_aggregated_fields
  min: maps_aggregated_fields
  max: maps_aggregated_fields
}

type maps_aggregated_count {
  center: Int

  """Replace the info text in the info popup"""
  custom_text: Int
  default_theme: Int

  """Shows a donation widget after 10 minutes"""
  donation_widget: Int
  expand_layer_control: Int

  """You can include GeoJSON"""
  geo: Int
  hide_signup: Int
  id: Int
  info_open: Int

  """Used as FavIcon"""
  logo: Int
  name: Int
  own_tag_space: Int
  show_filter_control: Int
  show_gratitude_control: Int
  show_layer_control: Int
  show_request_password: Int
  show_theme_control: Int
  show_zoom_control: Int
  tile_server_attribution: Int
  tile_server_url: Int
  url: Int
  zoom: Int
  layers: Int
}

type maps_aggregated_fields {
  zoom: Float
}

type maps_mutated {
  key: ID!
  event: EventEnum
  data: maps
}

type marker_icons {
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  image_outline(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  size: Float
  size_outline: Float
}

type marker_icons_aggregated {
  group: JSON
  countAll: Int
  count: marker_icons_aggregated_count
  countDistinct: marker_icons_aggregated_count
  avg: marker_icons_aggregated_fields
  sum: marker_icons_aggregated_fields
  avgDistinct: marker_icons_aggregated_fields
  sumDistinct: marker_icons_aggregated_fields
  min: marker_icons_aggregated_fields
  max: marker_icons_aggregated_fields
}

type marker_icons_aggregated_count {
  id: Int
  image: Int
  image_outline: Int
  size: Int
  size_outline: Int
}

type marker_icons_aggregated_fields {
  size: Float
  size_outline: Float
}

type marker_icons_mutated {
  key: ID!
  event: EventEnum
  data: marker_icons
}

type relations {
  direction: String
  heading: String
  hideWhenEmpty: Boolean
  id: ID!
  relation: String
}

type relations_aggregated {
  group: JSON
  countAll: Int
  count: relations_aggregated_count
  countDistinct: relations_aggregated_count
  avg: relations_aggregated_fields
  sum: relations_aggregated_fields
  avgDistinct: relations_aggregated_fields
  sumDistinct: relations_aggregated_fields
  min: relations_aggregated_fields
  max: relations_aggregated_fields
}

type relations_aggregated_count {
  direction: Int
  heading: Int
  hideWhenEmpty: Int
  id: Int
  relation: Int
}

type relations_aggregated_fields {
  id: Float
}

type relations_mutated {
  key: ID!
  event: EventEnum
  data: relations
}

type startEnd {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type startEnd_aggregated {
  group: JSON
  countAll: Int
  count: startEnd_aggregated_count
  countDistinct: startEnd_aggregated_count
}

type startEnd_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  user_created: Int
  user_updated: Int
}

type startEnd_mutated {
  key: ID!
  event: EventEnum
  data: startEnd
}

type tags {
  color: String
  date_created: Date
  date_created_func: datetime_functions
  id: ID!
  map(filter: maps_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): maps
  name: String
  offer_or_need: Boolean
  user_created: ID
}

type tags_aggregated {
  group: JSON
  countAll: Int
  count: tags_aggregated_count
  countDistinct: tags_aggregated_count
}

type tags_aggregated_count {
  color: Int
  date_created: Int
  id: Int
  map: Int
  name: Int
  offer_or_need: Int
  user_created: Int
}

type tags_mutated {
  key: ID!
  event: EventEnum
  data: tags
}

type team {
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  id: ID!
  image(filter: directus_files_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_files
  name: String
  role: String
  sort: Int
  status: String
  text: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type team_aggregated {
  group: JSON
  countAll: Int
  count: team_aggregated_count
  countDistinct: team_aggregated_count
  avg: team_aggregated_fields
  sum: team_aggregated_fields
  avgDistinct: team_aggregated_fields
  sumDistinct: team_aggregated_fields
  min: team_aggregated_fields
  max: team_aggregated_fields
}

type team_aggregated_count {
  date_created: Int
  date_updated: Int
  id: Int
  image: Int
  name: Int
  role: Int
  sort: Int
  status: Int
  text: Int
  user_created: Int
  user_updated: Int
}

type team_aggregated_fields {
  sort: Float
}

type team_mutated {
  key: ID!
  event: EventEnum
  data: team
}

type texts {
  dataField: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  heading: String
  hideWhenEmpty: Boolean
  id: ID!
  showMarkdownHint: Boolean
  size: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
}

type texts_aggregated {
  group: JSON
  countAll: Int
  count: texts_aggregated_count
  countDistinct: texts_aggregated_count
}

type texts_aggregated_count {
  dataField: Int
  date_created: Int
  date_updated: Int
  heading: Int
  hideWhenEmpty: Int
  id: Int
  showMarkdownHint: Int
  size: Int
  user_created: Int
  user_updated: Int
}

type texts_mutated {
  key: ID!
  event: EventEnum
  data: texts
}

type Themes {
  theme: ID!
}

type Themes_aggregated {
  group: JSON
  countAll: Int
  count: Themes_aggregated_count
  countDistinct: Themes_aggregated_count
}

type Themes_aggregated_count {
  theme: Int
}

type Themes_mutated {
  key: ID!
  event: EventEnum
  data: Themes
}

type types {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_created_func: datetime_functions
  date_updated: Date
  date_updated_func: datetime_functions
  icon_as_labels: Boolean
  id: ID!
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  user_updated(filter: directus_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): directus_users
  profileTemplate(filter: types_profileTemplate_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [types_profileTemplate]
  profileTemplate_func: count_functions
}

type types_aggregated {
  group: JSON
  countAll: Int
  count: types_aggregated_count
  countDistinct: types_aggregated_count
}

type types_aggregated_count {
  button_label: Int
  custom_profile_url: Int
  custom_text: Int
  date_created: Int
  date_updated: Int
  icon_as_labels: Int
  id: Int
  name: Int
  offers_and_needs: Int
  questlog: Int
  relations: Int
  show_header_view_in_form: Int
  show_name: Int
  show_name_input: Int
  show_profile_button: Int
  show_start_end: Int
  show_start_end_input: Int
  show_text: Int
  show_text_input: Int
  small_form_edit: Int
  template: Int
  text: Int
  text_input_label: Int
  user_created: Int
  user_updated: Int
  profileTemplate: Int
}

type types_mutated {
  key: ID!
  event: EventEnum
  data: types
}

type types_profileTemplate {
  collection: String
  id: ID!
  item: types_profileTemplate_item_union
  sort: Int
  types_id(filter: types_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): types
}

type types_profileTemplate_aggregated {
  group: JSON
  countAll: Int
  count: types_profileTemplate_aggregated_count
  countDistinct: types_profileTemplate_aggregated_count
  avg: types_profileTemplate_aggregated_fields
  sum: types_profileTemplate_aggregated_fields
  avgDistinct: types_profileTemplate_aggregated_fields
  sumDistinct: types_profileTemplate_aggregated_fields
  min: types_profileTemplate_aggregated_fields
  max: types_profileTemplate_aggregated_fields
}

type types_profileTemplate_aggregated_count {
  collection: Int
  id: Int
  item: Int
  sort: Int
  types_id: Int
}

type types_profileTemplate_aggregated_fields {
  id: Float
  sort: Float
}

type types_profileTemplate_mutated {
  key: ID!
  event: EventEnum
  data: types_profileTemplate
}

""""""
type version_attestations {
  color: String
  date_created: Date
  emoji: String
  id: ID
  shape: String
  text: String
  user_created: JSON
  to: JSON
}

""""""
type version_attestations_directus_users {
  attestations_id: JSON
  directus_users_id: JSON
  id: ID
}

""""""
type version_contactInfos {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  user_created: JSON
  user_updated: JSON
}

""""""
type version_crowdfundings {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: JSON
  user_updated: JSON
}

""""""
type version_directus_sync_id_map {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

""""""
type version_features {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  sort: Int
  status: String
  symbol: String
  text: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_gallery {
  date_created: Date
  date_updated: Date
  hideInputLabel: Boolean
  id: ID
  user_created: JSON
  user_updated: JSON
}

""""""
type version_groupSubheaders {
  date_created: Date
  date_updated: Date
  groupStates: JSON
  id: ID
  platforms: JSON
  shareBaseUrl: String
  user_created: JSON
  user_updated: JSON
  groupTypes: JSON
}

""""""
type version_groupSubheaders_groupTypes {
  groupSubheaders_id: JSON
  groupTypes_id: JSON
  id: ID
}

""""""
type version_groupTypes {
  color: String
  date_created: Date
  date_updated: Date
  id: ID
  image: JSON
  markerIcon: JSON
  name: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_inviteLinks {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: JSON
  user_updated: JSON
}

""""""
type version_items {
  color: String
  contact: String
  date_created: Date
  date_updated: Date
  draft: Boolean
  end: Date
  extended: JSON
  group_type: String
  id: ID
  image: JSON
  image_external: String
  layer: JSON
  markerIcon: JSON
  name: String
  next_appointment: String
  openCollectiveSlug: String
  parent: JSON
  position: GraphQLGeoJSON
  public_edit: Boolean
  slug: String
  start: Date
  status: String
  subname: String
  telephone: String
  text: String
  user_created: JSON
  user_updated: JSON
  gallery: JSON
  needs: JSON
  offers: JSON
  relations: JSON
  secrets: JSON
}

""""""
type version_items_files {
  directus_files_id: JSON
  id: ID
  items_id: JSON
}

""""""
type version_items_items {
  id: ID
  items_id: JSON
  related_items_id: JSON
  type: String
}

""""""
type version_items_tags {
  id: ID
  items_id: JSON
  tags_id: JSON
}

""""""
type version_items_tags_1 {
  id: ID
  items_id: JSON
  tags_id: JSON
}

""""""
type version_itemSecrets {
  item: JSON
  secret: ID
}

""""""
type version_junction_directus_users_tags {
  directus_users_id: JSON
  id: ID
  tags_id: JSON
}

""""""
type version_junction_directus_users_tags_1 {
  directus_users_id: JSON
  id: ID
  tags_id: JSON
}

""""""
type version_layers {
  id: ID
  index_plus_button: Boolean
  itemType: JSON
  item_presets: JSON
  listed: Boolean
  markerDefaultColor2: String
  markerIcon: JSON
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps: JSON
  notifications: JSON
}

""""""
type version_layers_directus_users_1 {
  directus_users_id: JSON
  id: ID
  layers_id: JSON
}

""""""
type version_layers_files {
  directus_files_id: JSON
  id: ID
  layers_id: JSON
}

""""""
type version_layers_maps {
  id: ID
  layers_id: JSON
  maps_id: JSON
}

""""""
type version_maps {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme: JSON

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  hide_signup: Boolean
  id: ID
  info_open: Boolean
  logo: JSON
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers: JSON
}

""""""
type version_marker_icons {
  id: ID
  image: JSON
  image_outline: JSON
  size: Float
  size_outline: Float
}

""""""
type version_relations {
  direction: String
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  relation: String
}

""""""
type version_startEnd {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: JSON
  user_updated: JSON
}

""""""
type version_tags {
  color: String
  date_created: Date
  id: ID
  map: JSON
  name: String
  offer_or_need: Boolean
  user_created: ID
}

""""""
type version_team {
  date_created: Date
  date_updated: Date
  id: ID
  image: JSON
  name: String
  role: String
  sort: Int
  status: String
  text: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_texts {
  dataField: String
  date_created: Date
  date_updated: Date
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  showMarkdownHint: Boolean
  size: String
  user_created: JSON
  user_updated: JSON
}

""""""
type version_Themes {
  theme: ID
}

""""""
type version_types {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_updated: Date
  icon_as_labels: Boolean
  id: ID
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created: JSON
  user_updated: JSON
  profileTemplate: JSON
}

""""""
type version_types_profileTemplate {
  collection: String
  id: ID
  item: String
  sort: Int
  types_id: JSON
}

input attestations_directus_users_filter {
  attestations_id: attestations_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [attestations_directus_users_filter]
  _or: [attestations_directus_users_filter]
}

""""""
input attestations_directus_users_quantifier_filter {
  attestations_id: attestations_filter
  directus_users_id: directus_users_filter
  id: number_filter_operators
  _and: [attestations_directus_users_filter]
  _or: [attestations_directus_users_filter]
  _some: attestations_directus_users_filter
  _none: attestations_directus_users_filter
}

input attestations_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  emoji: string_filter_operators
  id: id_filter_operators
  shape: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  to: attestations_directus_users_quantifier_filter
  to_func: count_function_filter_operators
  _and: [attestations_filter]
  _or: [attestations_filter]
}

input big_int_filter_operators {
  _eq: GraphQLBigInt
  _neq: GraphQLBigInt
  _in: [GraphQLBigInt]
  _nin: [GraphQLBigInt]
  _gt: GraphQLBigInt
  _gte: GraphQLBigInt
  _lt: GraphQLBigInt
  _lte: GraphQLBigInt
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLBigInt]
  _nbetween: [GraphQLBigInt]
}

input boolean_filter_operators {
  _eq: Boolean
  _neq: Boolean
  _null: Boolean
  _nnull: Boolean
}

input contactInfos_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  heading: string_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [contactInfos_filter]
  _or: [contactInfos_filter]
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_attestations_directus_users_input {
  attestations_id: create_attestations_input
  directus_users_id: create_directus_users_input
  id: ID
}

input create_attestations_input {
  color: String
  date_created: Date
  emoji: String
  id: ID
  shape: String
  text: String
  user_created: create_directus_users_input
  to: [create_attestations_directus_users_input]
}

input create_contactInfos_input {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_crowdfundings_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_directus_access_input {
  id: ID
  role: create_directus_roles_input
  user: create_directus_users_input
  policy: create_directus_policies_input
  sort: Int
}

input create_directus_files_input {
  id: ID
  storage: String!
  filename_disk: String
  filename_download: String!
  title: String
  type: String
  folder: create_directus_folders_input
  uploaded_by: create_directus_users_input
  created_on: Date
  modified_by: create_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input create_directus_folders_input {
  id: ID
  name: String!
  parent: create_directus_folders_input
}

input create_directus_permissions_input {
  id: ID
  collection: String!
  action: String!
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: create_directus_policies_input
}

input create_directus_policies_input {
  id: ID
  name: String!
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean!
  admin_access: Boolean!
  app_access: Boolean!
  permissions: [create_directus_permissions_input]
  users: [create_directus_access_input]
  roles: [create_directus_access_input]
}

input create_directus_roles_input {
  id: ID
  name: String!
  icon: String
  description: String
  parent: create_directus_roles_input
  children: [create_directus_roles_input]
  policies: [create_directus_access_input]
  users: [create_directus_users_input]
}

input create_directus_sync_id_map_input {
  id: ID
  table: String!
  sync_id: String!
  local_id: String!
  created_at: Date
}

input create_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: create_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: create_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  imported: Boolean
  wc_user: Boolean
  notifications: [create_layers_directus_users_1_input]
  policies: [create_directus_access_input]
}

input create_features_input {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  sort: Int
  status: String
  symbol: String
  text: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_gallery_input {
  date_created: Date
  date_updated: Date
  hideInputLabel: Boolean
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_groupSubheaders_groupTypes_input {
  groupSubheaders_id: create_groupSubheaders_input
  groupTypes_id: create_groupTypes_input
  id: ID
}

input create_groupSubheaders_input {
  date_created: Date
  date_updated: Date
  groupStates: JSON
  id: ID
  platforms: JSON
  shareBaseUrl: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  groupTypes: [create_groupSubheaders_groupTypes_input]
}

input create_groupTypes_input {
  color: String
  date_created: Date
  date_updated: Date
  id: ID
  image: create_directus_files_input
  markerIcon: create_marker_icons_input
  name: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_inviteLinks_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_items_files_input {
  directus_files_id: create_directus_files_input
  id: ID
  items_id: create_items_input
}

input create_items_input {
  color: String
  contact: String
  date_created: Date
  date_updated: Date
  draft: Boolean
  end: Date
  extended: JSON
  group_type: String
  id: ID
  image: create_directus_files_input
  image_external: String
  layer: create_layers_input
  markerIcon: create_marker_icons_input
  name: String
  next_appointment: String
  openCollectiveSlug: String
  parent: create_items_input
  position: GraphQLGeoJSON
  public_edit: Boolean
  slug: String
  start: Date
  status: String
  subname: String
  telephone: String
  text: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  gallery: [create_items_files_input]
  needs: [create_items_tags_1_input]
  offers: [create_items_tags_input]
  relations: [create_items_items_input]
  secrets: [create_itemSecrets_input]
}

input create_items_items_input {
  id: ID
  items_id: create_items_input
  related_items_id: create_items_input
  type: String
}

input create_items_tags_1_input {
  id: ID
  items_id: create_items_input
  tags_id: create_tags_input
}

input create_items_tags_input {
  id: ID
  items_id: create_items_input
  tags_id: create_tags_input
}

input create_itemSecrets_input {
  item: create_items_input
  secret: ID
}

input create_junction_directus_users_tags_1_input {
  directus_users_id: create_directus_users_input
  id: ID
  tags_id: create_tags_input
}

input create_junction_directus_users_tags_input {
  directus_users_id: create_directus_users_input
  id: ID
  tags_id: create_tags_input
}

input create_layers_directus_users_1_input {
  directus_users_id: create_directus_users_input
  id: ID
  layers_id: create_layers_input
}

input create_layers_files_input {
  directus_files_id: create_directus_files_input
  id: ID
  layers_id: create_layers_input
}

input create_layers_input {
  id: ID
  index_plus_button: Boolean
  itemType: create_types_input
  item_presets: JSON
  listed: Boolean
  markerDefaultColor2: String
  markerIcon: create_marker_icons_input
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps: [create_layers_maps_input]
  notifications: [create_layers_directus_users_1_input]
}

input create_layers_maps_input {
  id: ID
  layers_id: create_layers_input
  maps_id: create_maps_input
}

input create_maps_input {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme: create_Themes_input

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  hide_signup: Boolean
  id: ID
  info_open: Boolean
  logo: create_directus_files_input
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean!
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers: [create_layers_maps_input]
}

input create_marker_icons_input {
  id: ID!
  image: create_directus_files_input
  image_outline: create_directus_files_input
  size: Float
  size_outline: Float
}

input create_relations_input {
  direction: String
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  relation: String
}

input create_startEnd_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_tags_input {
  color: String
  date_created: Date
  id: ID
  map: create_maps_input
  name: String
  offer_or_need: Boolean
  user_created: ID
}

input create_team_input {
  date_created: Date
  date_updated: Date
  id: ID
  image: create_directus_files_input
  name: String
  role: String
  sort: Int
  status: String
  text: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_texts_input {
  dataField: String
  date_created: Date
  date_updated: Date
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  showMarkdownHint: Boolean
  size: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
}

input create_Themes_input {
  theme: ID!
}

input create_types_input {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_updated: Date
  icon_as_labels: Boolean
  id: ID
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created: create_directus_users_input
  user_updated: create_directus_users_input
  profileTemplate: [create_types_profileTemplate_input]
}

input create_types_profileTemplate_input {
  collection: String
  id: ID
  item: String
  sort: Int
  types_id: create_types_input
}

input crowdfundings_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [crowdfundings_filter]
  _or: [crowdfundings_filter]
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input datetime_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
  hour: number_filter_operators
  minute: number_filter_operators
  second: number_filter_operators
}

input directus_access_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
}

""""""
input directus_access_quantifier_filter {
  id: id_filter_operators
  role: directus_roles_filter
  user: directus_users_filter
  policy: directus_policies_filter
  sort: number_filter_operators
  _and: [directus_access_filter]
  _or: [directus_access_filter]
  _some: directus_access_filter
  _none: directus_access_filter
}

input directus_activity_filter {
  id: number_filter_operators
  action: string_filter_operators
  user: directus_users_filter
  timestamp: date_filter_operators
  timestamp_func: datetime_function_filter_operators
  ip: string_filter_operators
  user_agent: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  origin: string_filter_operators
  revisions: directus_revisions_quantifier_filter
  revisions_func: count_function_filter_operators
  _and: [directus_activity_filter]
  _or: [directus_activity_filter]
}

input directus_dashboards_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  note: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  color: string_filter_operators
  panels: directus_panels_quantifier_filter
  panels_func: count_function_filter_operators
  _and: [directus_dashboards_filter]
  _or: [directus_dashboards_filter]
}

input directus_files_filter {
  id: id_filter_operators
  storage: string_filter_operators
  filename_disk: string_filter_operators
  filename_download: string_filter_operators
  title: string_filter_operators
  type: string_filter_operators
  folder: directus_folders_filter
  uploaded_by: directus_users_filter
  created_on: date_filter_operators
  created_on_func: datetime_function_filter_operators
  modified_by: directus_users_filter
  modified_on: date_filter_operators
  modified_on_func: datetime_function_filter_operators
  charset: string_filter_operators
  filesize: big_int_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  duration: number_filter_operators
  embed: string_filter_operators
  description: string_filter_operators
  location: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  metadata: string_filter_operators
  metadata_func: count_function_filter_operators
  focal_point_x: number_filter_operators
  focal_point_y: number_filter_operators
  tus_id: string_filter_operators
  tus_data: string_filter_operators
  tus_data_func: count_function_filter_operators
  uploaded_on: date_filter_operators
  uploaded_on_func: datetime_function_filter_operators
  _and: [directus_files_filter]
  _or: [directus_files_filter]
}

input directus_flows_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  description: string_filter_operators
  status: string_filter_operators
  trigger: string_filter_operators
  accountability: string_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  operation: directus_operations_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  operations: directus_operations_quantifier_filter
  operations_func: count_function_filter_operators
  _and: [directus_flows_filter]
  _or: [directus_flows_filter]
}

input directus_folders_filter {
  id: id_filter_operators
  name: string_filter_operators
  parent: directus_folders_filter
  _and: [directus_folders_filter]
  _or: [directus_folders_filter]
}

input directus_operations_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
}

""""""
input directus_operations_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  key: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  resolve: directus_operations_filter
  reject: directus_operations_filter
  flow: directus_flows_filter
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_operations_filter]
  _or: [directus_operations_filter]
  _some: directus_operations_filter
  _none: directus_operations_filter
}

input directus_panels_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
}

""""""
input directus_panels_quantifier_filter {
  id: id_filter_operators
  dashboard: directus_dashboards_filter
  name: string_filter_operators
  icon: string_filter_operators
  color: string_filter_operators
  show_header: boolean_filter_operators
  note: string_filter_operators
  type: string_filter_operators
  position_x: number_filter_operators
  position_y: number_filter_operators
  width: number_filter_operators
  height: number_filter_operators
  options: string_filter_operators
  options_func: count_function_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  user_created: directus_users_filter
  _and: [directus_panels_filter]
  _or: [directus_panels_filter]
  _some: directus_panels_filter
  _none: directus_panels_filter
}

input directus_permissions_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
}

""""""
input directus_permissions_quantifier_filter {
  id: number_filter_operators
  collection: string_filter_operators
  action: string_filter_operators
  permissions: string_filter_operators
  permissions_func: count_function_filter_operators
  validation: string_filter_operators
  validation_func: count_function_filter_operators
  presets: string_filter_operators
  presets_func: count_function_filter_operators
  fields: string_filter_operators
  policy: directus_policies_filter
  _and: [directus_permissions_filter]
  _or: [directus_permissions_filter]
  _some: directus_permissions_filter
  _none: directus_permissions_filter
}

input directus_policies_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  ip_access: string_filter_operators
  enforce_tfa: boolean_filter_operators
  admin_access: boolean_filter_operators
  app_access: boolean_filter_operators
  permissions: directus_permissions_quantifier_filter
  permissions_func: count_function_filter_operators
  users: directus_access_quantifier_filter
  users_func: count_function_filter_operators
  roles: directus_access_quantifier_filter
  roles_func: count_function_filter_operators
  _and: [directus_policies_filter]
  _or: [directus_policies_filter]
}

input directus_revisions_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
}

""""""
input directus_revisions_quantifier_filter {
  id: number_filter_operators
  activity: directus_activity_filter
  collection: string_filter_operators
  item: string_filter_operators
  data: string_filter_operators
  data_func: count_function_filter_operators
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  parent: directus_revisions_filter
  version: directus_versions_filter
  _and: [directus_revisions_filter]
  _or: [directus_revisions_filter]
  _some: directus_revisions_filter
  _none: directus_revisions_filter
}

input directus_roles_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
}

""""""
input directus_roles_quantifier_filter {
  id: id_filter_operators
  name: string_filter_operators
  icon: string_filter_operators
  description: string_filter_operators
  parent: directus_roles_filter
  children: directus_roles_quantifier_filter
  children_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  users: directus_users_quantifier_filter
  users_func: count_function_filter_operators
  _and: [directus_roles_filter]
  _or: [directus_roles_filter]
  _some: directus_roles_filter
  _none: directus_roles_filter
}

input directus_sync_id_map_filter {
  id: number_filter_operators
  table: string_filter_operators
  sync_id: string_filter_operators
  local_id: string_filter_operators
  created_at: date_filter_operators
  created_at_func: datetime_function_filter_operators
  _and: [directus_sync_id_map_filter]
  _or: [directus_sync_id_map_filter]
}

input directus_users_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  imported: boolean_filter_operators
  wc_user: boolean_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
}

""""""
input directus_users_quantifier_filter {
  id: id_filter_operators
  first_name: string_filter_operators
  last_name: string_filter_operators
  email: string_filter_operators
  password: hash_filter_operators
  location: string_filter_operators
  title: string_filter_operators
  description: string_filter_operators
  tags: string_filter_operators
  tags_func: count_function_filter_operators
  avatar: directus_files_filter
  language: string_filter_operators
  tfa_secret: hash_filter_operators
  status: string_filter_operators
  role: directus_roles_filter
  token: hash_filter_operators
  last_access: date_filter_operators
  last_access_func: datetime_function_filter_operators
  last_page: string_filter_operators
  provider: string_filter_operators
  external_identifier: string_filter_operators
  auth_data: string_filter_operators
  auth_data_func: count_function_filter_operators
  email_notifications: boolean_filter_operators
  appearance: string_filter_operators
  theme_dark: string_filter_operators
  theme_light: string_filter_operators
  theme_light_overrides: string_filter_operators
  theme_light_overrides_func: count_function_filter_operators
  theme_dark_overrides: string_filter_operators
  theme_dark_overrides_func: count_function_filter_operators
  imported: boolean_filter_operators
  wc_user: boolean_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  policies: directus_access_quantifier_filter
  policies_func: count_function_filter_operators
  _and: [directus_users_filter]
  _or: [directus_users_filter]
  _some: directus_users_filter
  _none: directus_users_filter
}

input directus_versions_filter {
  id: id_filter_operators
  key: string_filter_operators
  name: string_filter_operators
  collection: string_filter_operators
  item: string_filter_operators
  hash: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  delta: string_filter_operators
  delta_func: count_function_filter_operators
  _and: [directus_versions_filter]
  _or: [directus_versions_filter]
}

input features_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  heading: string_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  symbol: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [features_filter]
  _or: [features_filter]
}

input gallery_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  hideInputLabel: boolean_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [gallery_filter]
  _or: [gallery_filter]
}

input geometry_filter_operators {
  _eq: GraphQLGeoJSON
  _neq: GraphQLGeoJSON
  _intersects: GraphQLGeoJSON
  _nintersects: GraphQLGeoJSON
  _intersects_bbox: GraphQLGeoJSON
  _nintersects_bbox: GraphQLGeoJSON
  _null: Boolean
  _nnull: Boolean
}

input groupSubheaders_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  groupStates: string_filter_operators
  groupStates_func: count_function_filter_operators
  id: id_filter_operators
  platforms: string_filter_operators
  platforms_func: count_function_filter_operators
  shareBaseUrl: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  groupTypes: groupSubheaders_groupTypes_quantifier_filter
  groupTypes_func: count_function_filter_operators
  _and: [groupSubheaders_filter]
  _or: [groupSubheaders_filter]
}

input groupSubheaders_groupTypes_filter {
  groupSubheaders_id: groupSubheaders_filter
  groupTypes_id: groupTypes_filter
  id: number_filter_operators
  _and: [groupSubheaders_groupTypes_filter]
  _or: [groupSubheaders_groupTypes_filter]
}

""""""
input groupSubheaders_groupTypes_quantifier_filter {
  groupSubheaders_id: groupSubheaders_filter
  groupTypes_id: groupTypes_filter
  id: number_filter_operators
  _and: [groupSubheaders_groupTypes_filter]
  _or: [groupSubheaders_groupTypes_filter]
  _some: groupSubheaders_groupTypes_filter
  _none: groupSubheaders_groupTypes_filter
}

input groupTypes_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  image: directus_files_filter
  markerIcon: marker_icons_filter
  name: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [groupTypes_filter]
  _or: [groupTypes_filter]
}

input hash_filter_operators {
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input id_filter_operators {
  _eq: ID
  _neq: ID
  _contains: ID
  _icontains: ID
  _ncontains: ID
  _starts_with: ID
  _nstarts_with: ID
  _istarts_with: ID
  _nistarts_with: ID
  _ends_with: ID
  _nends_with: ID
  _iends_with: ID
  _niends_with: ID
  _in: [ID]
  _nin: [ID]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input inviteLinks_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [inviteLinks_filter]
  _or: [inviteLinks_filter]
}

input items_files_filter {
  directus_files_id: directus_files_filter
  id: number_filter_operators
  items_id: items_filter
  _and: [items_files_filter]
  _or: [items_files_filter]
}

""""""
input items_files_quantifier_filter {
  directus_files_id: directus_files_filter
  id: number_filter_operators
  items_id: items_filter
  _and: [items_files_filter]
  _or: [items_files_filter]
  _some: items_files_filter
  _none: items_files_filter
}

input items_filter {
  color: string_filter_operators
  contact: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  draft: boolean_filter_operators
  end: date_filter_operators
  end_func: datetime_function_filter_operators
  extended: string_filter_operators
  extended_func: count_function_filter_operators
  group_type: string_filter_operators
  id: id_filter_operators
  image: directus_files_filter
  image_external: string_filter_operators
  layer: layers_filter
  markerIcon: marker_icons_filter
  name: string_filter_operators
  next_appointment: string_filter_operators
  openCollectiveSlug: string_filter_operators
  parent: items_filter
  position: geometry_filter_operators
  public_edit: boolean_filter_operators
  slug: string_filter_operators
  start: date_filter_operators
  start_func: datetime_function_filter_operators
  status: string_filter_operators
  subname: string_filter_operators
  telephone: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  gallery: items_files_quantifier_filter
  gallery_func: count_function_filter_operators
  needs: items_tags_1_quantifier_filter
  needs_func: count_function_filter_operators
  offers: items_tags_quantifier_filter
  offers_func: count_function_filter_operators
  relations: items_items_quantifier_filter
  relations_func: count_function_filter_operators
  secrets: itemSecrets_quantifier_filter
  secrets_func: count_function_filter_operators
  _and: [items_filter]
  _or: [items_filter]
}

input items_items_filter {
  id: number_filter_operators
  items_id: items_filter
  related_items_id: items_filter
  type: string_filter_operators
  _and: [items_items_filter]
  _or: [items_items_filter]
}

""""""
input items_items_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  related_items_id: items_filter
  type: string_filter_operators
  _and: [items_items_filter]
  _or: [items_items_filter]
  _some: items_items_filter
  _none: items_items_filter
}

input items_tags_1_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_1_filter]
  _or: [items_tags_1_filter]
}

""""""
input items_tags_1_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_1_filter]
  _or: [items_tags_1_filter]
  _some: items_tags_1_filter
  _none: items_tags_1_filter
}

input items_tags_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_filter]
  _or: [items_tags_filter]
}

""""""
input items_tags_quantifier_filter {
  id: number_filter_operators
  items_id: items_filter
  tags_id: tags_filter
  _and: [items_tags_filter]
  _or: [items_tags_filter]
  _some: items_tags_filter
  _none: items_tags_filter
}

input itemSecrets_filter {
  item: items_filter
  secret: id_filter_operators
  _and: [itemSecrets_filter]
  _or: [itemSecrets_filter]
}

""""""
input itemSecrets_quantifier_filter {
  item: items_filter
  secret: id_filter_operators
  _and: [itemSecrets_filter]
  _or: [itemSecrets_filter]
  _some: itemSecrets_filter
  _none: itemSecrets_filter
}

input junction_directus_users_tags_1_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  tags_id: tags_filter
  _and: [junction_directus_users_tags_1_filter]
  _or: [junction_directus_users_tags_1_filter]
}

input junction_directus_users_tags_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  tags_id: tags_filter
  _and: [junction_directus_users_tags_filter]
  _or: [junction_directus_users_tags_filter]
}

input layers_directus_users_1_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  layers_id: layers_filter
  _and: [layers_directus_users_1_filter]
  _or: [layers_directus_users_1_filter]
}

""""""
input layers_directus_users_1_quantifier_filter {
  directus_users_id: directus_users_filter
  id: number_filter_operators
  layers_id: layers_filter
  _and: [layers_directus_users_1_filter]
  _or: [layers_directus_users_1_filter]
  _some: layers_directus_users_1_filter
  _none: layers_directus_users_1_filter
}

input layers_files_filter {
  directus_files_id: directus_files_filter
  id: number_filter_operators
  layers_id: layers_filter
  _and: [layers_files_filter]
  _or: [layers_files_filter]
}

input layers_filter {
  id: id_filter_operators
  index_plus_button: boolean_filter_operators
  itemType: types_filter
  item_presets: string_filter_operators
  item_presets_func: count_function_filter_operators
  listed: boolean_filter_operators
  markerDefaultColor2: string_filter_operators
  markerIcon: marker_icons_filter
  markerShape: string_filter_operators
  menuColor: string_filter_operators
  menuText: string_filter_operators
  name: string_filter_operators
  onlyOnePerOwner: boolean_filter_operators
  public_edit_items: boolean_filter_operators
  sort: number_filter_operators
  userProfileLayer: boolean_filter_operators
  maps: layers_maps_quantifier_filter
  maps_func: count_function_filter_operators
  notifications: layers_directus_users_1_quantifier_filter
  notifications_func: count_function_filter_operators
  _and: [layers_filter]
  _or: [layers_filter]
}

input layers_maps_filter {
  id: number_filter_operators
  layers_id: layers_filter
  maps_id: maps_filter
  _and: [layers_maps_filter]
  _or: [layers_maps_filter]
}

""""""
input layers_maps_quantifier_filter {
  id: number_filter_operators
  layers_id: layers_filter
  maps_id: maps_filter
  _and: [layers_maps_filter]
  _or: [layers_maps_filter]
  _some: layers_maps_filter
  _none: layers_maps_filter
}

input maps_filter {
  center: geometry_filter_operators
  custom_text: string_filter_operators
  default_theme: Themes_filter
  donation_widget: boolean_filter_operators
  expand_layer_control: boolean_filter_operators
  geo: string_filter_operators
  geo_func: count_function_filter_operators
  hide_signup: boolean_filter_operators
  id: id_filter_operators
  info_open: boolean_filter_operators
  logo: directus_files_filter
  name: string_filter_operators
  own_tag_space: boolean_filter_operators
  show_filter_control: boolean_filter_operators
  show_gratitude_control: boolean_filter_operators
  show_layer_control: boolean_filter_operators
  show_request_password: boolean_filter_operators
  show_theme_control: boolean_filter_operators
  show_zoom_control: boolean_filter_operators
  tile_server_attribution: string_filter_operators
  tile_server_url: string_filter_operators
  url: string_filter_operators
  zoom: number_filter_operators
  layers: layers_maps_quantifier_filter
  layers_func: count_function_filter_operators
  _and: [maps_filter]
  _or: [maps_filter]
}

input marker_icons_filter {
  id: string_filter_operators
  image: directus_files_filter
  image_outline: directus_files_filter
  size: number_filter_operators
  size_outline: number_filter_operators
  _and: [marker_icons_filter]
  _or: [marker_icons_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input relations_filter {
  direction: string_filter_operators
  heading: string_filter_operators
  hideWhenEmpty: boolean_filter_operators
  id: number_filter_operators
  relation: string_filter_operators
  _and: [relations_filter]
  _or: [relations_filter]
}

input startEnd_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [startEnd_filter]
  _or: [startEnd_filter]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input tags_filter {
  color: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  id: id_filter_operators
  map: maps_filter
  name: string_filter_operators
  offer_or_need: boolean_filter_operators
  user_created: id_filter_operators
  _and: [tags_filter]
  _or: [tags_filter]
}

input team_filter {
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  id: id_filter_operators
  image: directus_files_filter
  name: string_filter_operators
  role: string_filter_operators
  sort: number_filter_operators
  status: string_filter_operators
  text: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [team_filter]
  _or: [team_filter]
}

input texts_filter {
  dataField: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  heading: string_filter_operators
  hideWhenEmpty: boolean_filter_operators
  id: id_filter_operators
  showMarkdownHint: boolean_filter_operators
  size: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  _and: [texts_filter]
  _or: [texts_filter]
}

input Themes_filter {
  theme: string_filter_operators
  _and: [Themes_filter]
  _or: [Themes_filter]
}

input types_filter {
  button_label: string_filter_operators
  custom_profile_url: string_filter_operators
  custom_text: string_filter_operators
  date_created: date_filter_operators
  date_created_func: datetime_function_filter_operators
  date_updated: date_filter_operators
  date_updated_func: datetime_function_filter_operators
  icon_as_labels: boolean_filter_operators
  id: id_filter_operators
  name: string_filter_operators
  offers_and_needs: boolean_filter_operators
  questlog: boolean_filter_operators
  relations: boolean_filter_operators
  show_header_view_in_form: boolean_filter_operators
  show_name: boolean_filter_operators
  show_name_input: boolean_filter_operators
  show_profile_button: boolean_filter_operators
  show_start_end: boolean_filter_operators
  show_start_end_input: boolean_filter_operators
  show_text: boolean_filter_operators
  show_text_input: boolean_filter_operators
  small_form_edit: boolean_filter_operators
  template: string_filter_operators
  text: boolean_filter_operators
  text_input_label: string_filter_operators
  user_created: directus_users_filter
  user_updated: directus_users_filter
  profileTemplate: types_profileTemplate_quantifier_filter
  profileTemplate_func: count_function_filter_operators
  _and: [types_filter]
  _or: [types_filter]
}

input types_profileTemplate_filter {
  collection: string_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  types_id: types_filter
  _and: [types_profileTemplate_filter]
  _or: [types_profileTemplate_filter]
  item__groupSubheaders: groupSubheaders_filter
  item__contactInfos: contactInfos_filter
  item__texts: texts_filter
  item__startEnd: startEnd_filter
  item__gallery: gallery_filter
  item__crowdfundings: crowdfundings_filter
  item__inviteLinks: inviteLinks_filter
  item__relations: relations_filter
}

""""""
input types_profileTemplate_quantifier_filter {
  collection: string_filter_operators
  id: number_filter_operators
  sort: number_filter_operators
  types_id: types_filter
  _and: [types_profileTemplate_filter]
  _or: [types_profileTemplate_filter]
  _some: types_profileTemplate_filter
  _none: types_profileTemplate_filter
  item__groupSubheaders: groupSubheaders_filter
  item__contactInfos: contactInfos_filter
  item__texts: texts_filter
  item__startEnd: startEnd_filter
  item__gallery: gallery_filter
  item__crowdfundings: crowdfundings_filter
  item__inviteLinks: inviteLinks_filter
  item__relations: relations_filter
}

input update_attestations_directus_users_input {
  attestations_id: update_attestations_input
  directus_users_id: update_directus_users_input
  id: ID
}

input update_attestations_input {
  color: String
  date_created: Date
  emoji: String
  id: ID
  shape: String
  text: String
  user_created: update_directus_users_input
  to: [update_attestations_directus_users_input]
}

input update_contactInfos_input {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_crowdfundings_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_directus_access_input {
  id: ID
  role: update_directus_roles_input
  user: update_directus_users_input
  policy: update_directus_policies_input
  sort: Int
}

input update_directus_files_input {
  id: ID
  storage: String
  filename_disk: String
  filename_download: String
  title: String
  type: String
  folder: update_directus_folders_input
  uploaded_by: update_directus_users_input
  created_on: Date
  modified_by: update_directus_users_input
  modified_on: Date
  charset: String
  filesize: GraphQLBigInt
  width: Int
  height: Int
  duration: Int
  embed: String
  description: String
  location: String
  tags: JSON
  metadata: JSON
  focal_point_x: Int
  focal_point_y: Int
  tus_id: String
  tus_data: JSON
  uploaded_on: Date
}

input update_directus_folders_input {
  id: ID
  name: String
  parent: update_directus_folders_input
}

input update_directus_permissions_input {
  id: ID
  collection: String
  action: String
  permissions: JSON
  validation: JSON
  presets: JSON
  fields: [String]
  policy: update_directus_policies_input
}

input update_directus_policies_input {
  id: ID
  name: String
  icon: String
  description: String
  ip_access: [String]

  """$t:field_options.directus_policies.enforce_tfa"""
  enforce_tfa: Boolean
  admin_access: Boolean
  app_access: Boolean
  permissions: [update_directus_permissions_input]
  users: [update_directus_access_input]
  roles: [update_directus_access_input]
}

input update_directus_roles_input {
  id: ID
  name: String
  icon: String
  description: String
  parent: update_directus_roles_input
  children: [update_directus_roles_input]
  policies: [update_directus_access_input]
  users: [update_directus_users_input]
}

input update_directus_sync_id_map_input {
  id: ID
  table: String
  sync_id: String
  local_id: String
  created_at: Date
}

input update_directus_users_input {
  id: ID
  first_name: String
  last_name: String
  email: String
  password: Hash
  location: String
  title: String
  description: String
  tags: JSON
  avatar: update_directus_files_input
  language: String
  tfa_secret: Hash
  status: String
  role: update_directus_roles_input
  token: Hash
  last_access: Date
  last_page: String
  provider: String
  external_identifier: String
  auth_data: JSON
  email_notifications: Boolean
  appearance: String
  theme_dark: String
  theme_light: String
  theme_light_overrides: JSON
  theme_dark_overrides: JSON
  imported: Boolean
  wc_user: Boolean
  notifications: [update_layers_directus_users_1_input]
  policies: [update_directus_access_input]
}

input update_features_input {
  date_created: Date
  date_updated: Date
  heading: String
  id: ID
  sort: Int
  status: String
  symbol: String
  text: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_gallery_input {
  date_created: Date
  date_updated: Date
  hideInputLabel: Boolean
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_groupSubheaders_groupTypes_input {
  groupSubheaders_id: update_groupSubheaders_input
  groupTypes_id: update_groupTypes_input
  id: ID
}

input update_groupSubheaders_input {
  date_created: Date
  date_updated: Date
  groupStates: JSON
  id: ID
  platforms: JSON
  shareBaseUrl: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  groupTypes: [update_groupSubheaders_groupTypes_input]
}

input update_groupTypes_input {
  color: String
  date_created: Date
  date_updated: Date
  id: ID
  image: update_directus_files_input
  markerIcon: update_marker_icons_input
  name: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_inviteLinks_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_items_files_input {
  directus_files_id: update_directus_files_input
  id: ID
  items_id: update_items_input
}

input update_items_input {
  color: String
  contact: String
  date_created: Date
  date_updated: Date
  draft: Boolean
  end: Date
  extended: JSON
  group_type: String
  id: ID
  image: update_directus_files_input
  image_external: String
  layer: update_layers_input
  markerIcon: update_marker_icons_input
  name: String
  next_appointment: String
  openCollectiveSlug: String
  parent: update_items_input
  position: GraphQLGeoJSON
  public_edit: Boolean
  slug: String
  start: Date
  status: String
  subname: String
  telephone: String
  text: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  gallery: [update_items_files_input]
  needs: [update_items_tags_1_input]
  offers: [update_items_tags_input]
  relations: [update_items_items_input]
  secrets: [update_itemSecrets_input]
}

input update_items_items_input {
  id: ID
  items_id: update_items_input
  related_items_id: update_items_input
  type: String
}

input update_items_tags_1_input {
  id: ID
  items_id: update_items_input
  tags_id: update_tags_input
}

input update_items_tags_input {
  id: ID
  items_id: update_items_input
  tags_id: update_tags_input
}

input update_itemSecrets_input {
  item: update_items_input
  secret: ID
}

input update_junction_directus_users_tags_1_input {
  directus_users_id: update_directus_users_input
  id: ID
  tags_id: update_tags_input
}

input update_junction_directus_users_tags_input {
  directus_users_id: update_directus_users_input
  id: ID
  tags_id: update_tags_input
}

input update_layers_directus_users_1_input {
  directus_users_id: update_directus_users_input
  id: ID
  layers_id: update_layers_input
}

input update_layers_files_input {
  directus_files_id: update_directus_files_input
  id: ID
  layers_id: update_layers_input
}

input update_layers_input {
  id: ID
  index_plus_button: Boolean
  itemType: update_types_input
  item_presets: JSON
  listed: Boolean
  markerDefaultColor2: String
  markerIcon: update_marker_icons_input
  markerShape: String
  menuColor: String
  menuText: String
  name: String
  onlyOnePerOwner: Boolean
  public_edit_items: Boolean
  sort: Int
  userProfileLayer: Boolean
  maps: [update_layers_maps_input]
  notifications: [update_layers_directus_users_1_input]
}

input update_layers_maps_input {
  id: ID
  layers_id: update_layers_input
  maps_id: update_maps_input
}

input update_maps_input {
  center: GraphQLGeoJSON

  """Replace the info text in the info popup"""
  custom_text: String
  default_theme: update_Themes_input

  """Shows a donation widget after 10 minutes"""
  donation_widget: Boolean
  expand_layer_control: Boolean

  """You can include GeoJSON"""
  geo: JSON
  hide_signup: Boolean
  id: ID
  info_open: Boolean
  logo: update_directus_files_input
  name: String
  own_tag_space: Boolean
  show_filter_control: Boolean
  show_gratitude_control: Boolean
  show_layer_control: Boolean
  show_request_password: Boolean
  show_theme_control: Boolean
  show_zoom_control: Boolean
  tile_server_attribution: String
  tile_server_url: String
  url: String
  zoom: Int
  layers: [update_layers_maps_input]
}

input update_marker_icons_input {
  id: ID
  image: update_directus_files_input
  image_outline: update_directus_files_input
  size: Float
  size_outline: Float
}

input update_relations_input {
  direction: String
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  relation: String
}

input update_startEnd_input {
  date_created: Date
  date_updated: Date
  id: ID
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_tags_input {
  color: String
  date_created: Date
  id: ID
  map: update_maps_input
  name: String
  offer_or_need: Boolean
  user_created: ID
}

input update_team_input {
  date_created: Date
  date_updated: Date
  id: ID
  image: update_directus_files_input
  name: String
  role: String
  sort: Int
  status: String
  text: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_texts_input {
  dataField: String
  date_created: Date
  date_updated: Date
  heading: String
  hideWhenEmpty: Boolean
  id: ID
  showMarkdownHint: Boolean
  size: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
}

input update_Themes_input {
  theme: ID
}

input update_types_input {
  button_label: String
  custom_profile_url: String
  custom_text: String
  date_created: Date
  date_updated: Date
  icon_as_labels: Boolean
  id: ID
  name: String
  offers_and_needs: Boolean
  questlog: Boolean
  relations: Boolean
  show_header_view_in_form: Boolean
  show_name: Boolean
  show_name_input: Boolean
  show_profile_button: Boolean
  show_start_end: Boolean
  show_start_end_input: Boolean
  show_text: Boolean
  show_text_input: Boolean
  small_form_edit: Boolean
  template: String
  text: Boolean
  text_input_label: String
  user_created: update_directus_users_input
  user_updated: update_directus_users_input
  profileTemplate: [update_types_profileTemplate_input]
}

input update_types_profileTemplate_input {
  collection: String
  id: ID
  item: String
  sort: Int
  types_id: update_types_input
}